

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 12:41:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0001                     _TMR0	set	1
   454  0009                     _PORTE	set	9
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  0019                     _TXREG	set	25
   458  001A                     _RCREG	set	26
   459  001E                     _ADRESH	set	30
   460  000B                     _INTCONbits	set	11
   461  0018                     _RCSTAbits	set	24
   462  0008                     _PORTD	set	8
   463  000C                     _PIR1bits	set	12
   464  001F                     _ADCON0bits	set	31
   465  0064                     _TXIF	set	100
   466  002F                     _RA7	set	47
   467  0066                     _ADIF	set	102
   468  0049                     _RE1	set	73
   469  0048                     _RE0	set	72
   470  0081                     _OPTION_REGbits	set	129
   471  0089                     _TRISE	set	137
   472  0088                     _TRISD	set	136
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  008F                     _OSCCONbits	set	143
   476  009A                     _SPBRGH	set	154
   477  0099                     _SPBRG	set	153
   478  0098                     _TXSTAbits	set	152
   479  0087                     _TRISCbits	set	135
   480  0089                     _TRISEbits	set	137
   481  0085                     _TRISAbits	set	133
   482  008C                     _PIE1bits	set	140
   483  009F                     _ADCON1bits	set	159
   484  0464                     _TXIE	set	1124
   485  0189                     _ANSELH	set	393
   486  0188                     _ANSEL	set	392
   487  0187                     _BAUDCTLbits	set	391
   488  0188                     _ANSELbits	set	392
   489                           
   490                           	psect	strings
   491  064E                     __pstrings:
   492  064E                     stringtab:
   493  064E                     __stringtab:
   494  064E                     stringcode:	
   495                           ;	String table - string pointers are 1 byte each
   496                           
   497  064E                     stringdir:
   498  064E  3006               	movlw	high stringdir
   499  064F  008A               	movwf	10
   500  0650  0804               	movf	4,w
   501  0651  0A84               	incf	4,f
   502  0652  0782               	addwf	2,f
   503  0653                     __stringbase:
   504  0653  3400               	retlw	0
   505  0654                     __end_of__stringtab:
   506  0654                     STR_2:
   507  0654  3430               	retlw	48	;'0'
   508  0655  342E               	retlw	46	;'.'
   509  0656  3430               	retlw	48	;'0'
   510  0657  3430               	retlw	48	;'0'
   511  0658  3400               	retlw	0
   512  0659                     STR_6:
   513  0659  3430               	retlw	48	;'0'
   514  065A  3430               	retlw	48	;'0'
   515  065B  3430               	retlw	48	;'0'
   516  065C  3400               	retlw	0
   517  065D                     STR_1:
   518  065D  3453               	retlw	83	;'S'
   519  065E  3431               	retlw	49	;'1'
   520  065F  3400               	retlw	0
   521  0660                     STR_3:
   522  0660  3453               	retlw	83	;'S'
   523  0661  3432               	retlw	50	;'2'
   524  0662  3400               	retlw	0
   525  0663                     STR_5:
   526  0663  3453               	retlw	83	;'S'
   527  0664  3433               	retlw	51	;'3'
   528  0665  3400               	retlw	0
   529  0654                     
   530                           	psect	cinit
   531  000F                     start_initialization:	
   532                           ; #config settings
   533                           
   534  000F                     __initialization:
   535                           
   536                           ; Clear objects allocated to COMMON
   537  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   538  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   539  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   540                           
   541                           ; Clear objects allocated to BANK0
   542  0012  1283               	bcf	3,5	;RP0=0, select bank0
   543  0013  1303               	bcf	3,6	;RP1=0, select bank0
   544  0014  01B4               	clrf	__pbssBANK0& (0+127)
   545  0015  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   546  0016  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   547  0017  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   548  0018  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   549  0019  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   550  001A  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   551  001B  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   552  001C  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   553  001D  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   554  001E  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   555  001F  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   556  0020  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   557  0021  01C1               	clrf	(__pbssBANK0+13)& (0+127)
   558  0022  01C2               	clrf	(__pbssBANK0+14)& (0+127)
   559  0023                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0023                     __end_of__initialization:
   563  0023  0183               	clrf	3
   564  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssCOMMON
   567  0078                     __pbssCOMMON:
   568  0078                     _bandera1:
   569  0078                     	ds	1
   570  0079                     _RC_temp:
   571  0079                     	ds	1
   572  007A                     _bandera:
   573  007A                     	ds	1
   574                           
   575                           	psect	bssBANK0
   576  0034                     __pbssBANK0:
   577  0034                     _a:
   578  0034                     	ds	2
   579  0036                     _C33:
   580  0036                     	ds	1
   581  0037                     _C32:
   582  0037                     	ds	1
   583  0038                     _C31:
   584  0038                     	ds	1
   585  0039                     _C23:
   586  0039                     	ds	1
   587  003A                     _C22:
   588  003A                     	ds	1
   589  003B                     _C21:
   590  003B                     	ds	1
   591  003C                     _C13:
   592  003C                     	ds	1
   593  003D                     _C12:
   594  003D                     	ds	1
   595  003E                     _C11:
   596  003E                     	ds	1
   597  003F                     _cont:
   598  003F                     	ds	1
   599  0040                     _contador:
   600  0040                     	ds	1
   601  0041                     _ADC2:
   602  0041                     	ds	1
   603  0042                     _ADC1:
   604  0042                     	ds	1
   605                           
   606                           	psect	cstackCOMMON
   607  0070                     __pcstackCOMMON:
   608  0070                     ?_setup:
   609  0070                     ?_displayLCD:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_initADC:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Lcd_Port:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_Lcd_Cmd:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_Lcd_Write_Char:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_Lcd_Write_String:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_initUSART:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_isr:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_isr:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_main:	
   640                           ; 1 bytes @ 0x0
   641                           
   642                           
   643                           ; 1 bytes @ 0x0
   644  0070                     	ds	3
   645  0073                     ??_initADC:
   646  0073                     ??_Lcd_Port:	
   647                           ; 1 bytes @ 0x3
   648                           
   649  0073                     ??_initUSART:	
   650                           ; 1 bytes @ 0x3
   651                           
   652  0073                     ?___bmul:	
   653                           ; 1 bytes @ 0x3
   654                           
   655  0073                     ?___wmul:	
   656                           ; 1 bytes @ 0x3
   657                           
   658  0073                     Lcd_Port@a:	
   659                           ; 2 bytes @ 0x3
   660                           
   661  0073                     ___bmul@multiplicand:	
   662                           ; 1 bytes @ 0x3
   663                           
   664  0073                     ___wmul@multiplier:	
   665                           ; 1 bytes @ 0x3
   666                           
   667                           
   668                           ; 2 bytes @ 0x3
   669  0073                     	ds	1
   670  0074                     ??_Lcd_Cmd:
   671  0074                     ??_Lcd_Write_Char:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0074                     ??___bmul:	
   675                           ; 1 bytes @ 0x4
   676                           
   677                           
   678                           ; 1 bytes @ 0x4
   679  0074                     	ds	1
   680  0075                     initADC@channel:
   681  0075                     Lcd_Write_Char@a:	
   682                           ; 1 bytes @ 0x5
   683                           
   684  0075                     ___bmul@product:	
   685                           ; 1 bytes @ 0x5
   686                           
   687  0075                     ___wmul@multiplicand:	
   688                           ; 1 bytes @ 0x5
   689                           
   690                           
   691                           ; 2 bytes @ 0x5
   692  0075                     	ds	1
   693  0076                     ??_Lcd_Write_String:
   694  0076                     Lcd_Cmd@a:	
   695                           ; 1 bytes @ 0x6
   696                           
   697  0076                     ___bmul@multiplier:	
   698                           ; 1 bytes @ 0x6
   699                           
   700                           
   701                           ; 1 bytes @ 0x6
   702  0076                     	ds	1
   703  0077                     ?_Lcd_Set_Cursor:
   704  0077                     ??___wmul:	
   705                           ; 1 bytes @ 0x7
   706                           
   707  0077                     ??___awdiv:	
   708                           ; 1 bytes @ 0x7
   709                           
   710  0077                     Lcd_Set_Cursor@b:	
   711                           ; 1 bytes @ 0x7
   712                           
   713                           
   714                           ; 1 bytes @ 0x7
   715  0077                     	ds	1
   716  0078                     ??_setup:
   717                           
   718                           	psect	cstackBANK0
   719  0020                     __pcstackBANK0:	
   720                           ; 1 bytes @ 0x8
   721                           
   722  0020                     ??_Lcd_Set_Cursor:
   723  0020                     ??_Lcd_Init:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0020                     Lcd_Write_String@i:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0020                     ___wmul@product:	
   730                           ; 2 bytes @ 0x0
   731                           
   732                           
   733                           ; 2 bytes @ 0x0
   734  0020                     	ds	1
   735  0021                     Lcd_Set_Cursor@a:
   736                           
   737                           ; 1 bytes @ 0x1
   738  0021                     	ds	1
   739  0022                     ?___awdiv:
   740  0022                     Lcd_Set_Cursor@temp:	
   741                           ; 2 bytes @ 0x2
   742                           
   743  0022                     Lcd_Write_String@a:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0022                     ___awdiv@divisor:	
   747                           ; 1 bytes @ 0x2
   748                           
   749                           
   750                           ; 2 bytes @ 0x2
   751  0022                     	ds	1
   752  0023                     ??_displayLCD:
   753                           
   754                           ; 1 bytes @ 0x3
   755  0023                     	ds	1
   756  0024                     ___awdiv@dividend:
   757                           
   758                           ; 2 bytes @ 0x4
   759  0024                     	ds	2
   760  0026                     ___awdiv@counter:
   761                           
   762                           ; 1 bytes @ 0x6
   763  0026                     	ds	1
   764  0027                     ___awdiv@sign:
   765                           
   766                           ; 1 bytes @ 0x7
   767  0027                     	ds	1
   768  0028                     ___awdiv@quotient:
   769                           
   770                           ; 2 bytes @ 0x8
   771  0028                     	ds	2
   772  002A                     ??_main:
   773                           
   774                           ; 1 bytes @ 0xA
   775  002A                     	ds	8
   776  0032                     _main$1258:
   777                           
   778                           ; 2 bytes @ 0x12
   779  0032                     	ds	2
   780                           
   781                           	psect	maintext
   782  0027                     __pmaintext:	
   783 ;;
   784 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   785 ;;
   786 ;; *************** function _main *****************
   787 ;; Defined at:
   788 ;;		line 155 in file "lab2_main.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : B00/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         0       0       0       0       0
   803 ;;      Locals:         0       2       0       0       0
   804 ;;      Temps:          0       8       0       0       0
   805 ;;      Totals:         0      10       0       0       0
   806 ;;Total ram usage:       10 bytes
   807 ;; Hardware stack levels required when called:    6
   808 ;; This function calls:
   809 ;;		_Lcd_Set_Cursor
   810 ;;		_Lcd_Write_Char
   811 ;;		___awdiv
   812 ;;		___bmul
   813 ;;		___wmul
   814 ;;		_setup
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _main
   822  0027                     _main:
   823  0027                     l1874:	
   824                           ;incstack = 0
   825                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   826                           
   827                           
   828                           ;lab2_main.c: 156:         C11 = 5;
   829  0027  120A  118A  257B  120A  118A  	fcall	_setup
   830  002C                     l1876:
   831                           
   832                           ;lab2_main.c: 158:     if (C21 > 5){
   833  002C  3010               	movlw	16
   834  002D  1283               	bcf	3,5	;RP0=0, select bank0
   835  002E  1303               	bcf	3,6	;RP1=0, select bank0
   836  002F  023F               	subwf	_cont,w
   837  0030  1C03               	skipc
   838  0031  2833               	goto	u981
   839  0032  2834               	goto	u980
   840  0033                     u981:
   841  0033  2838               	goto	l1882
   842  0034                     u980:
   843  0034                     l1878:
   844                           
   845                           ;lab2_main.c: 159:         C11 = 5;
   846  0034  01BF               	clrf	_cont
   847  0035                     l1880:
   848                           
   849                           ;lab2_main.c: 160:     }
   850  0035  1683               	bsf	3,5	;RP0=1, select bank1
   851  0036  1303               	bcf	3,6	;RP1=0, select bank1
   852  0037  160C               	bsf	12,4	;volatile
   853  0038                     l1882:
   854                           
   855                           ;lab2_main.c: 164: 
   856  0038  3033               	movlw	51
   857  0039  1283               	bcf	3,5	;RP0=0, select bank0
   858  003A  00A2               	movwf	___awdiv@divisor
   859  003B  3000               	movlw	0
   860  003C  00A3               	movwf	___awdiv@divisor+1
   861  003D  0842               	movf	_ADC1,w
   862  003E  00AA               	movwf	??_main
   863  003F  01AB               	clrf	??_main+1
   864  0040  082A               	movf	??_main,w
   865  0041  00A4               	movwf	___awdiv@dividend
   866  0042  082B               	movf	??_main+1,w
   867  0043  00A5               	movwf	___awdiv@dividend+1
   868  0044  120A  118A  24B5  120A  118A  	fcall	___awdiv
   869  0049  1283               	bcf	3,5	;RP0=0, select bank0
   870  004A  1303               	bcf	3,6	;RP1=0, select bank0
   871  004B  0822               	movf	?___awdiv,w
   872  004C  00AC               	movwf	??_main+2
   873  004D  082C               	movf	??_main+2,w
   874  004E  00BE               	movwf	_C11
   875  004F                     l1884:
   876                           
   877                           ;lab2_main.c: 165: 
   878  004F  3033               	movlw	51
   879  0050  00A2               	movwf	___awdiv@divisor
   880  0051  3000               	movlw	0
   881  0052  00A3               	movwf	___awdiv@divisor+1
   882  0053  0842               	movf	_ADC1,w
   883  0054  00AA               	movwf	??_main
   884  0055  01AB               	clrf	??_main+1
   885  0056  082A               	movf	??_main,w
   886  0057  00F3               	movwf	___wmul@multiplier
   887  0058  082B               	movf	??_main+1,w
   888  0059  00F4               	movwf	___wmul@multiplier+1
   889  005A  3064               	movlw	100
   890  005B  00F5               	movwf	___wmul@multiplicand
   891  005C  3000               	movlw	0
   892  005D  00F6               	movwf	___wmul@multiplicand+1
   893  005E  120A  118A  25BA  120A  118A  	fcall	___wmul
   894  0063  0874               	movf	?___wmul+1,w
   895  0064  1283               	bcf	3,5	;RP0=0, select bank0
   896  0065  1303               	bcf	3,6	;RP1=0, select bank0
   897  0066  00A5               	movwf	___awdiv@dividend+1
   898  0067  0873               	movf	?___wmul,w
   899  0068  00A4               	movwf	___awdiv@dividend
   900  0069  120A  118A  24B5  120A  118A  	fcall	___awdiv
   901  006E  1283               	bcf	3,5	;RP0=0, select bank0
   902  006F  1303               	bcf	3,6	;RP1=0, select bank0
   903  0070  0822               	movf	?___awdiv,w
   904  0071  00AC               	movwf	??_main+2
   905  0072  0823               	movf	?___awdiv+1,w
   906  0073  00AD               	movwf	??_main+3
   907  0074  083E               	movf	_C11,w
   908  0075  00AE               	movwf	??_main+4
   909  0076  01AF               	clrf	??_main+5
   910  0077  082E               	movf	??_main+4,w
   911  0078  00F3               	movwf	___wmul@multiplier
   912  0079  082F               	movf	??_main+5,w
   913  007A  00F4               	movwf	___wmul@multiplier+1
   914  007B  309C               	movlw	156
   915  007C  00F5               	movwf	___wmul@multiplicand
   916  007D  30FF               	movlw	255
   917  007E  00F6               	movwf	___wmul@multiplicand+1
   918  007F  120A  118A  25BA  120A  118A  	fcall	___wmul
   919  0084  0873               	movf	?___wmul,w
   920  0085  1283               	bcf	3,5	;RP0=0, select bank0
   921  0086  1303               	bcf	3,6	;RP1=0, select bank0
   922  0087  072C               	addwf	??_main+2,w
   923  0088  00B2               	movwf	_main$1258
   924  0089  0874               	movf	?___wmul+1,w
   925  008A  1803               	skipnc
   926  008B  0A74               	incf	?___wmul+1,w
   927  008C  072D               	addwf	??_main+3,w
   928  008D  00B3               	movwf	_main$1258+1
   929  008E                     l1886:
   930                           
   931                           ;lab2_main.c: 165: 
   932  008E  300A               	movlw	10
   933  008F  00A2               	movwf	___awdiv@divisor
   934  0090  3000               	movlw	0
   935  0091  00A3               	movwf	___awdiv@divisor+1
   936  0092  0833               	movf	_main$1258+1,w
   937  0093  00A5               	movwf	___awdiv@dividend+1
   938  0094  0832               	movf	_main$1258,w
   939  0095  00A4               	movwf	___awdiv@dividend
   940  0096  120A  118A  24B5  120A  118A  	fcall	___awdiv
   941  009B  1283               	bcf	3,5	;RP0=0, select bank0
   942  009C  1303               	bcf	3,6	;RP1=0, select bank0
   943  009D  0822               	movf	?___awdiv,w
   944  009E  00AA               	movwf	??_main
   945  009F  082A               	movf	??_main,w
   946  00A0  00BD               	movwf	_C12
   947  00A1                     l1888:
   948                           
   949                           ;lab2_main.c: 166: 
   950  00A1  3033               	movlw	51
   951  00A2  00A2               	movwf	___awdiv@divisor
   952  00A3  3000               	movlw	0
   953  00A4  00A3               	movwf	___awdiv@divisor+1
   954  00A5  0842               	movf	_ADC1,w
   955  00A6  00AA               	movwf	??_main
   956  00A7  01AB               	clrf	??_main+1
   957  00A8  082A               	movf	??_main,w
   958  00A9  00F3               	movwf	___wmul@multiplier
   959  00AA  082B               	movf	??_main+1,w
   960  00AB  00F4               	movwf	___wmul@multiplier+1
   961  00AC  3064               	movlw	100
   962  00AD  00F5               	movwf	___wmul@multiplicand
   963  00AE  3000               	movlw	0
   964  00AF  00F6               	movwf	___wmul@multiplicand+1
   965  00B0  120A  118A  25BA  120A  118A  	fcall	___wmul
   966  00B5  0874               	movf	?___wmul+1,w
   967  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   968  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   969  00B8  00A5               	movwf	___awdiv@dividend+1
   970  00B9  0873               	movf	?___wmul,w
   971  00BA  00A4               	movwf	___awdiv@dividend
   972  00BB  120A  118A  24B5  120A  118A  	fcall	___awdiv
   973  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   974  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   975  00C2  0822               	movf	?___awdiv,w
   976  00C3  00AC               	movwf	??_main+2
   977  00C4  0823               	movf	?___awdiv+1,w
   978  00C5  00AD               	movwf	??_main+3
   979  00C6  309C               	movlw	156
   980  00C7  00AE               	movwf	??_main+4
   981  00C8  082E               	movf	??_main+4,w
   982  00C9  00F3               	movwf	___bmul@multiplicand
   983  00CA  083E               	movf	_C11,w
   984  00CB  120A  118A  2694  120A  118A  	fcall	___bmul
   985  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   986  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   987  00D2  00AF               	movwf	??_main+5
   988  00D3  30F6               	movlw	246
   989  00D4  00B0               	movwf	??_main+6
   990  00D5  0830               	movf	??_main+6,w
   991  00D6  00F3               	movwf	___bmul@multiplicand
   992  00D7  083D               	movf	_C12,w
   993  00D8  120A  118A  2694  120A  118A  	fcall	___bmul
   994  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   995  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   996  00DF  072F               	addwf	??_main+5,w
   997  00E0  072C               	addwf	??_main+2,w
   998  00E1  00B1               	movwf	??_main+7
   999  00E2  0831               	movf	??_main+7,w
  1000  00E3  00BC               	movwf	_C13
  1001  00E4                     l1890:
  1002                           
  1003                           ;lab2_main.c: 168:     Lcd_Write_Char(C11 +48);
  1004  00E4  3033               	movlw	51
  1005  00E5  00A2               	movwf	___awdiv@divisor
  1006  00E6  3000               	movlw	0
  1007  00E7  00A3               	movwf	___awdiv@divisor+1
  1008  00E8  0841               	movf	_ADC2,w
  1009  00E9  00AA               	movwf	??_main
  1010  00EA  01AB               	clrf	??_main+1
  1011  00EB  082A               	movf	??_main,w
  1012  00EC  00A4               	movwf	___awdiv@dividend
  1013  00ED  082B               	movf	??_main+1,w
  1014  00EE  00A5               	movwf	___awdiv@dividend+1
  1015  00EF  120A  118A  24B5  120A  118A  	fcall	___awdiv
  1016  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1018  00F6  0822               	movf	?___awdiv,w
  1019  00F7  00AC               	movwf	??_main+2
  1020  00F8  082C               	movf	??_main+2,w
  1021  00F9  00BB               	movwf	_C21
  1022  00FA                     l1892:
  1023                           
  1024                           ;lab2_main.c: 169:     Lcd_Set_Cursor(2,3);
  1025  00FA  3033               	movlw	51
  1026  00FB  00A2               	movwf	___awdiv@divisor
  1027  00FC  3000               	movlw	0
  1028  00FD  00A3               	movwf	___awdiv@divisor+1
  1029  00FE  0841               	movf	_ADC2,w
  1030  00FF  00AA               	movwf	??_main
  1031  0100  01AB               	clrf	??_main+1
  1032  0101  082A               	movf	??_main,w
  1033  0102  00F3               	movwf	___wmul@multiplier
  1034  0103  082B               	movf	??_main+1,w
  1035  0104  00F4               	movwf	___wmul@multiplier+1
  1036  0105  3064               	movlw	100
  1037  0106  00F5               	movwf	___wmul@multiplicand
  1038  0107  3000               	movlw	0
  1039  0108  00F6               	movwf	___wmul@multiplicand+1
  1040  0109  120A  118A  25BA  120A  118A  	fcall	___wmul
  1041  010E  0874               	movf	?___wmul+1,w
  1042  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0111  00A5               	movwf	___awdiv@dividend+1
  1045  0112  0873               	movf	?___wmul,w
  1046  0113  00A4               	movwf	___awdiv@dividend
  1047  0114  120A  118A  24B5  120A  118A  	fcall	___awdiv
  1048  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1049  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1050  011B  0822               	movf	?___awdiv,w
  1051  011C  00AC               	movwf	??_main+2
  1052  011D  0823               	movf	?___awdiv+1,w
  1053  011E  00AD               	movwf	??_main+3
  1054  011F  083B               	movf	_C21,w
  1055  0120  00AE               	movwf	??_main+4
  1056  0121  01AF               	clrf	??_main+5
  1057  0122  082E               	movf	??_main+4,w
  1058  0123  00F3               	movwf	___wmul@multiplier
  1059  0124  082F               	movf	??_main+5,w
  1060  0125  00F4               	movwf	___wmul@multiplier+1
  1061  0126  309C               	movlw	156
  1062  0127  00F5               	movwf	___wmul@multiplicand
  1063  0128  30FF               	movlw	255
  1064  0129  00F6               	movwf	___wmul@multiplicand+1
  1065  012A  120A  118A  25BA  120A  118A  	fcall	___wmul
  1066  012F  0873               	movf	?___wmul,w
  1067  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0132  072C               	addwf	??_main+2,w
  1070  0133  00B2               	movwf	_main$1258
  1071  0134  0874               	movf	?___wmul+1,w
  1072  0135  1803               	skipnc
  1073  0136  0A74               	incf	?___wmul+1,w
  1074  0137  072D               	addwf	??_main+3,w
  1075  0138  00B3               	movwf	_main$1258+1
  1076  0139                     l1894:
  1077                           
  1078                           ;lab2_main.c: 169:     Lcd_Set_Cursor(2,3);
  1079  0139  300A               	movlw	10
  1080  013A  00A2               	movwf	___awdiv@divisor
  1081  013B  3000               	movlw	0
  1082  013C  00A3               	movwf	___awdiv@divisor+1
  1083  013D  0833               	movf	_main$1258+1,w
  1084  013E  00A5               	movwf	___awdiv@dividend+1
  1085  013F  0832               	movf	_main$1258,w
  1086  0140  00A4               	movwf	___awdiv@dividend
  1087  0141  120A  118A  24B5  120A  118A  	fcall	___awdiv
  1088  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0148  0822               	movf	?___awdiv,w
  1091  0149  00AA               	movwf	??_main
  1092  014A  082A               	movf	??_main,w
  1093  014B  00BA               	movwf	_C22
  1094  014C                     l1896:
  1095                           
  1096                           ;lab2_main.c: 170:     Lcd_Write_Char(C12 + 48);
  1097  014C  3033               	movlw	51
  1098  014D  00A2               	movwf	___awdiv@divisor
  1099  014E  3000               	movlw	0
  1100  014F  00A3               	movwf	___awdiv@divisor+1
  1101  0150  0841               	movf	_ADC2,w
  1102  0151  00AA               	movwf	??_main
  1103  0152  01AB               	clrf	??_main+1
  1104  0153  082A               	movf	??_main,w
  1105  0154  00F3               	movwf	___wmul@multiplier
  1106  0155  082B               	movf	??_main+1,w
  1107  0156  00F4               	movwf	___wmul@multiplier+1
  1108  0157  3064               	movlw	100
  1109  0158  00F5               	movwf	___wmul@multiplicand
  1110  0159  3000               	movlw	0
  1111  015A  00F6               	movwf	___wmul@multiplicand+1
  1112  015B  120A  118A  25BA  120A  118A  	fcall	___wmul
  1113  0160  0874               	movf	?___wmul+1,w
  1114  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0163  00A5               	movwf	___awdiv@dividend+1
  1117  0164  0873               	movf	?___wmul,w
  1118  0165  00A4               	movwf	___awdiv@dividend
  1119  0166  120A  118A  24B5  120A  118A  	fcall	___awdiv
  1120  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1121  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1122  016D  0822               	movf	?___awdiv,w
  1123  016E  00AC               	movwf	??_main+2
  1124  016F  0823               	movf	?___awdiv+1,w
  1125  0170  00AD               	movwf	??_main+3
  1126  0171  309C               	movlw	156
  1127  0172  00AE               	movwf	??_main+4
  1128  0173  082E               	movf	??_main+4,w
  1129  0174  00F3               	movwf	___bmul@multiplicand
  1130  0175  083B               	movf	_C21,w
  1131  0176  120A  118A  2694  120A  118A  	fcall	___bmul
  1132  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1133  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1134  017D  00AF               	movwf	??_main+5
  1135  017E  30F6               	movlw	246
  1136  017F  00B0               	movwf	??_main+6
  1137  0180  0830               	movf	??_main+6,w
  1138  0181  00F3               	movwf	___bmul@multiplicand
  1139  0182  083A               	movf	_C22,w
  1140  0183  120A  118A  2694  120A  118A  	fcall	___bmul
  1141  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1143  018A  072F               	addwf	??_main+5,w
  1144  018B  072C               	addwf	??_main+2,w
  1145  018C  00B1               	movwf	??_main+7
  1146  018D  0831               	movf	??_main+7,w
  1147  018E  00B9               	movwf	_C23
  1148  018F                     l1898:
  1149                           
  1150                           ;lab2_main.c: 173: 
  1151  018F  3064               	movlw	100
  1152  0190  00A2               	movwf	___awdiv@divisor
  1153  0191  3000               	movlw	0
  1154  0192  00A3               	movwf	___awdiv@divisor+1
  1155  0193  0840               	movf	_contador,w
  1156  0194  00AA               	movwf	??_main
  1157  0195  01AB               	clrf	??_main+1
  1158  0196  082A               	movf	??_main,w
  1159  0197  00A4               	movwf	___awdiv@dividend
  1160  0198  082B               	movf	??_main+1,w
  1161  0199  00A5               	movwf	___awdiv@dividend+1
  1162  019A  120A  118A  24B5  120A  118A  	fcall	___awdiv
  1163  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1164  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1165  01A1  0822               	movf	?___awdiv,w
  1166  01A2  00AC               	movwf	??_main+2
  1167  01A3  082C               	movf	??_main+2,w
  1168  01A4  00B8               	movwf	_C31
  1169  01A5                     l1900:
  1170                           
  1171                           ;lab2_main.c: 174: 
  1172  01A5  300A               	movlw	10
  1173  01A6  00A2               	movwf	___awdiv@divisor
  1174  01A7  3000               	movlw	0
  1175  01A8  00A3               	movwf	___awdiv@divisor+1
  1176  01A9  0838               	movf	_C31,w
  1177  01AA  00AA               	movwf	??_main
  1178  01AB  01AB               	clrf	??_main+1
  1179  01AC  082A               	movf	??_main,w
  1180  01AD  00F3               	movwf	___wmul@multiplier
  1181  01AE  082B               	movf	??_main+1,w
  1182  01AF  00F4               	movwf	___wmul@multiplier+1
  1183  01B0  309C               	movlw	156
  1184  01B1  00F5               	movwf	___wmul@multiplicand
  1185  01B2  30FF               	movlw	255
  1186  01B3  00F6               	movwf	___wmul@multiplicand+1
  1187  01B4  120A  118A  25BA  120A  118A  	fcall	___wmul
  1188  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1189  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1190  01BB  0840               	movf	_contador,w
  1191  01BC  0773               	addwf	?___wmul,w
  1192  01BD  00A4               	movwf	___awdiv@dividend
  1193  01BE  0874               	movf	?___wmul+1,w
  1194  01BF  1803               	skipnc
  1195  01C0  0A74               	incf	?___wmul+1,w
  1196  01C1  00A5               	movwf	___awdiv@dividend+1
  1197  01C2  120A  118A  24B5  120A  118A  	fcall	___awdiv
  1198  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1199  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1200  01C9  0822               	movf	?___awdiv,w
  1201  01CA  00AC               	movwf	??_main+2
  1202  01CB  082C               	movf	??_main+2,w
  1203  01CC  00B7               	movwf	_C32
  1204  01CD                     l1902:
  1205                           
  1206                           ;lab2_main.c: 175:     Lcd_Set_Cursor(2,7);
  1207  01CD  309C               	movlw	156
  1208  01CE  00AA               	movwf	??_main
  1209  01CF  082A               	movf	??_main,w
  1210  01D0  00F3               	movwf	___bmul@multiplicand
  1211  01D1  0838               	movf	_C31,w
  1212  01D2  120A  118A  2694  120A  118A  	fcall	___bmul
  1213  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01D9  00AB               	movwf	??_main+1
  1216  01DA  30F6               	movlw	246
  1217  01DB  00AC               	movwf	??_main+2
  1218  01DC  082C               	movf	??_main+2,w
  1219  01DD  00F3               	movwf	___bmul@multiplicand
  1220  01DE  0837               	movf	_C32,w
  1221  01DF  120A  118A  2694  120A  118A  	fcall	___bmul
  1222  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1223  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1224  01E6  072B               	addwf	??_main+1,w
  1225  01E7  0740               	addwf	_contador,w
  1226  01E8  00AD               	movwf	??_main+3
  1227  01E9  082D               	movf	??_main+3,w
  1228  01EA  00B6               	movwf	_C33
  1229  01EB                     l1904:
  1230                           
  1231                           ;lab2_main.c: 178:     Lcd_Write_Char(C22 + 48);
  1232  01EB  300A               	movlw	10
  1233  01EC  023D               	subwf	_C12,w
  1234  01ED  1C03               	skipc
  1235  01EE  29F0               	goto	u991
  1236  01EF  29F1               	goto	u990
  1237  01F0                     u991:
  1238  01F0  29F5               	goto	l227
  1239  01F1                     u990:
  1240  01F1                     l1906:
  1241                           
  1242                           ;lab2_main.c: 179:     Lcd_Set_Cursor(2,10);
  1243  01F1  3009               	movlw	9
  1244  01F2  00AA               	movwf	??_main
  1245  01F3  082A               	movf	??_main,w
  1246  01F4  00BD               	movwf	_C12
  1247  01F5                     l227:	
  1248                           ;lab2_main.c: 180:     Lcd_Write_Char(C23 + 48);
  1249                           
  1250                           
  1251                           ;lab2_main.c: 181: 
  1252  01F5  300A               	movlw	10
  1253  01F6  023C               	subwf	_C13,w
  1254  01F7  1C03               	skipc
  1255  01F8  29FA               	goto	u1001
  1256  01F9  29FB               	goto	u1000
  1257  01FA                     u1001:
  1258  01FA  29FF               	goto	l228
  1259  01FB                     u1000:
  1260  01FB                     l1908:
  1261                           
  1262                           ;lab2_main.c: 182: 
  1263  01FB  3009               	movlw	9
  1264  01FC  00AA               	movwf	??_main
  1265  01FD  082A               	movf	??_main,w
  1266  01FE  00BC               	movwf	_C13
  1267  01FF                     l228:	
  1268                           ;lab2_main.c: 183:     Lcd_Set_Cursor(2,13);
  1269                           
  1270                           
  1271                           ;lab2_main.c: 184:     Lcd_Write_Char(C31 +48);
  1272  01FF  300A               	movlw	10
  1273  0200  023A               	subwf	_C22,w
  1274  0201  1C03               	skipc
  1275  0202  2A04               	goto	u1011
  1276  0203  2A05               	goto	u1010
  1277  0204                     u1011:
  1278  0204  2A09               	goto	l229
  1279  0205                     u1010:
  1280  0205                     l1910:
  1281                           
  1282                           ;lab2_main.c: 185:     Lcd_Set_Cursor(2,14);
  1283  0205  3009               	movlw	9
  1284  0206  00AA               	movwf	??_main
  1285  0207  082A               	movf	??_main,w
  1286  0208  00BA               	movwf	_C22
  1287  0209                     l229:	
  1288                           ;lab2_main.c: 186:     Lcd_Write_Char(C32 + 48);
  1289                           
  1290                           
  1291                           ;lab2_main.c: 187:     Lcd_Set_Cursor(2,15);
  1292  0209  300A               	movlw	10
  1293  020A  0239               	subwf	_C23,w
  1294  020B  1C03               	skipc
  1295  020C  2A0E               	goto	u1021
  1296  020D  2A0F               	goto	u1020
  1297  020E                     u1021:
  1298  020E  2A13               	goto	l230
  1299  020F                     u1020:
  1300  020F                     l1912:
  1301                           
  1302                           ;lab2_main.c: 188:     Lcd_Write_Char(C33 + 48);
  1303  020F  3009               	movlw	9
  1304  0210  00AA               	movwf	??_main
  1305  0211  082A               	movf	??_main,w
  1306  0212  00B9               	movwf	_C23
  1307  0213                     l230:	
  1308                           ;lab2_main.c: 189: 
  1309                           
  1310                           
  1311                           ;lab2_main.c: 191: }
  1312  0213  3006               	movlw	6
  1313  0214  023E               	subwf	_C11,w
  1314  0215  1C03               	skipc
  1315  0216  2A18               	goto	u1031
  1316  0217  2A19               	goto	u1030
  1317  0218                     u1031:
  1318  0218  2A1D               	goto	l231
  1319  0219                     u1030:
  1320  0219                     l1914:
  1321                           
  1322                           ;lab2_main.c: 192: 
  1323  0219  3005               	movlw	5
  1324  021A  00AA               	movwf	??_main
  1325  021B  082A               	movf	??_main,w
  1326  021C  00BE               	movwf	_C11
  1327  021D                     l231:	
  1328                           ;lab2_main.c: 193: void setup(void){
  1329                           
  1330                           
  1331                           ;lab2_main.c: 194: 
  1332  021D  3006               	movlw	6
  1333  021E  023B               	subwf	_C21,w
  1334  021F  1C03               	skipc
  1335  0220  2A22               	goto	u1041
  1336  0221  2A23               	goto	u1040
  1337  0222                     u1041:
  1338  0222  2A27               	goto	l232
  1339  0223                     u1040:
  1340  0223                     l1916:
  1341                           
  1342                           ;lab2_main.c: 195: 
  1343  0223  3005               	movlw	5
  1344  0224  00AA               	movwf	??_main
  1345  0225  082A               	movf	??_main,w
  1346  0226  00BE               	movwf	_C11
  1347  0227                     l232:	
  1348                           ;lab2_main.c: 196:     OSCCONbits.IRCF2 =1 ;
  1349                           
  1350                           
  1351                           ;lab2_main.c: 197:     OSCCONbits.IRCF1 =1 ;
  1352  0227  3006               	movlw	6
  1353  0228  0238               	subwf	_C31,w
  1354  0229  1C03               	skipc
  1355  022A  2A2C               	goto	u1051
  1356  022B  2A2D               	goto	u1050
  1357  022C                     u1051:
  1358  022C  2A31               	goto	l1920
  1359  022D                     u1050:
  1360  022D                     l1918:
  1361                           
  1362                           ;lab2_main.c: 198:     OSCCONbits.IRCF0 =1 ;
  1363  022D  3005               	movlw	5
  1364  022E  00AA               	movwf	??_main
  1365  022F  082A               	movf	??_main,w
  1366  0230  00BE               	movwf	_C11
  1367  0231                     l1920:
  1368                           
  1369                           ;lab2_main.c: 203:     TRISA = 0x03;
  1370  0231  01F7               	clrf	Lcd_Set_Cursor@b
  1371  0232  0AF7               	incf	Lcd_Set_Cursor@b,f
  1372  0233  3002               	movlw	2
  1373  0234  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1374  0239                     l1922:
  1375                           
  1376                           ;lab2_main.c: 204:     TRISB = 0;
  1377  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1378  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1379  023B  083E               	movf	_C11,w
  1380  023C  3E30               	addlw	48
  1381  023D  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1382  0242                     l1924:
  1383                           
  1384                           ;lab2_main.c: 205:     TRISD = 0;
  1385  0242  3003               	movlw	3
  1386  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0245  00AA               	movwf	??_main
  1389  0246  082A               	movf	??_main,w
  1390  0247  00F7               	movwf	Lcd_Set_Cursor@b
  1391  0248  3002               	movlw	2
  1392  0249  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1393  024E                     l1926:
  1394                           
  1395                           ;lab2_main.c: 206:     TRISE = 0;
  1396  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1397  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0250  083D               	movf	_C12,w
  1399  0251  3E30               	addlw	48
  1400  0252  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1401  0257                     l1928:
  1402                           
  1403                           ;lab2_main.c: 207: 
  1404  0257  3004               	movlw	4
  1405  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1407  025A  00AA               	movwf	??_main
  1408  025B  082A               	movf	??_main,w
  1409  025C  00F7               	movwf	Lcd_Set_Cursor@b
  1410  025D  3002               	movlw	2
  1411  025E  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1412  0263                     l1930:
  1413                           
  1414                           ;lab2_main.c: 208:     PORTA = 0;
  1415  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0265  083C               	movf	_C13,w
  1418  0266  3E30               	addlw	48
  1419  0267  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1420  026C                     l1932:
  1421                           
  1422                           ;lab2_main.c: 211:     PORTE = 0;
  1423  026C  3007               	movlw	7
  1424  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1425  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1426  026F  00AA               	movwf	??_main
  1427  0270  082A               	movf	??_main,w
  1428  0271  00F7               	movwf	Lcd_Set_Cursor@b
  1429  0272  3002               	movlw	2
  1430  0273  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1431  0278                     l1934:
  1432                           
  1433                           ;lab2_main.c: 212:     ANSEL = 0x03;
  1434  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1436  027A  083B               	movf	_C21,w
  1437  027B  3E30               	addlw	48
  1438  027C  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1439  0281                     l1936:
  1440                           
  1441                           ;lab2_main.c: 213:     ANSELH = 0;
  1442  0281  3009               	movlw	9
  1443  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0284  00AA               	movwf	??_main
  1446  0285  082A               	movf	??_main,w
  1447  0286  00F7               	movwf	Lcd_Set_Cursor@b
  1448  0287  3002               	movlw	2
  1449  0288  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1450  028D                     l1938:
  1451                           
  1452                           ;lab2_main.c: 214: 
  1453  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1454  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1455  028F  083A               	movf	_C22,w
  1456  0290  3E30               	addlw	48
  1457  0291  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1458  0296                     l1940:
  1459                           
  1460                           ;lab2_main.c: 215: 
  1461  0296  300A               	movlw	10
  1462  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0299  00AA               	movwf	??_main
  1465  029A  082A               	movf	??_main,w
  1466  029B  00F7               	movwf	Lcd_Set_Cursor@b
  1467  029C  3002               	movlw	2
  1468  029D  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1469  02A2                     l1942:
  1470                           
  1471                           ;lab2_main.c: 216:     INTCONbits.GIE = 1;
  1472  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1473  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1474  02A4  0839               	movf	_C23,w
  1475  02A5  3E30               	addlw	48
  1476  02A6  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1477  02AB                     l1944:
  1478                           
  1479                           ;lab2_main.c: 219:     Lcd_Init();
  1480  02AB  300D               	movlw	13
  1481  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1482  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1483  02AE  00AA               	movwf	??_main
  1484  02AF  082A               	movf	??_main,w
  1485  02B0  00F7               	movwf	Lcd_Set_Cursor@b
  1486  02B1  3002               	movlw	2
  1487  02B2  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1488  02B7                     l1946:
  1489                           
  1490                           ;lab2_main.c: 220: 
  1491  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1492  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1493  02B9  0838               	movf	_C31,w
  1494  02BA  3E30               	addlw	48
  1495  02BB  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1496  02C0                     l1948:
  1497                           
  1498                           ;lab2_main.c: 221: 
  1499  02C0  300E               	movlw	14
  1500  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1501  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1502  02C3  00AA               	movwf	??_main
  1503  02C4  082A               	movf	??_main,w
  1504  02C5  00F7               	movwf	Lcd_Set_Cursor@b
  1505  02C6  3002               	movlw	2
  1506  02C7  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1507  02CC                     l1950:
  1508                           
  1509                           ;lab2_main.c: 222: 
  1510  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1511  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1512  02CE  0837               	movf	_C32,w
  1513  02CF  3E30               	addlw	48
  1514  02D0  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1515  02D5                     l1952:
  1516                           
  1517                           ;lab2_main.c: 223:     initADC(0);
  1518  02D5  300F               	movlw	15
  1519  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1520  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  1521  02D8  00AA               	movwf	??_main
  1522  02D9  082A               	movf	??_main,w
  1523  02DA  00F7               	movwf	Lcd_Set_Cursor@b
  1524  02DB  3002               	movlw	2
  1525  02DC  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  1526  02E1                     l1954:
  1527                           
  1528                           ;lab2_main.c: 224:     initADC(1);
  1529  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1530  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1531  02E3  0836               	movf	_C33,w
  1532  02E4  3E30               	addlw	48
  1533  02E5  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  1534  02EA  282C               	goto	l1876
  1535  02EB  120A  118A  280C   	ljmp	start
  1536  02EE                     __end_of_main:
  1537                           
  1538                           	psect	text1
  1539  057B                     __ptext1:	
  1540 ;; *************** function _setup *****************
  1541 ;; Defined at:
  1542 ;;		line 229 in file "lab2_main.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0
  1559 ;;      Totals:         0       0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    5
  1563 ;; This function calls:
  1564 ;;		_Lcd_Init
  1565 ;;		_displayLCD
  1566 ;;		_initADC
  1567 ;;		_initUSART
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _setup
  1575  057B                     _setup:
  1576  057B                     l1812:	
  1577                           ;incstack = 0
  1578                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1579                           
  1580                           
  1581                           ;lab2_main.c: 232: 
  1582  057B  1683               	bsf	3,5	;RP0=1, select bank1
  1583  057C  1303               	bcf	3,6	;RP1=0, select bank1
  1584  057D  170F               	bsf	15,6	;volatile
  1585                           
  1586                           ;lab2_main.c: 233: 
  1587  057E  168F               	bsf	15,5	;volatile
  1588                           
  1589                           ;lab2_main.c: 234: 
  1590  057F  160F               	bsf	15,4	;volatile
  1591                           
  1592                           ;lab2_main.c: 235:     INTCONbits.T0IE = 1;
  1593  0580  140F               	bsf	15,0	;volatile
  1594  0581                     l1814:
  1595                           
  1596                           ;lab2_main.c: 239:     initUSART();
  1597  0581  3003               	movlw	3
  1598  0582  0085               	movwf	5	;volatile
  1599  0583                     l1816:
  1600                           
  1601                           ;lab2_main.c: 240: 
  1602  0583  0186               	clrf	6	;volatile
  1603  0584                     l1818:
  1604                           
  1605                           ;lab2_main.c: 241: 
  1606  0584  0188               	clrf	8	;volatile
  1607  0585                     l1820:
  1608                           
  1609                           ;lab2_main.c: 242:     displayLCD();
  1610  0585  0189               	clrf	9	;volatile
  1611  0586                     l1822:
  1612                           
  1613                           ;lab2_main.c: 244: }
  1614  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0588  0185               	clrf	5	;volatile
  1617  0589                     l1824:
  1618                           
  1619                           ;lab2_main.c: 245: 
  1620  0589  0186               	clrf	6	;volatile
  1621  058A                     l1826:
  1622                           
  1623                           ;lab2_main.c: 246: 
  1624  058A  0188               	clrf	8	;volatile
  1625  058B                     l1828:
  1626                           
  1627                           ;lab2_main.c: 247: void displayLCD(){
  1628  058B  0189               	clrf	9	;volatile
  1629  058C                     l1830:
  1630                           
  1631                           ;lab2_main.c: 248: 
  1632  058C  3003               	movlw	3
  1633  058D  1683               	bsf	3,5	;RP0=1, select bank3
  1634  058E  1703               	bsf	3,6	;RP1=1, select bank3
  1635  058F  0088               	movwf	8	;volatile
  1636                           
  1637                           ;lab2_main.c: 249:     Lcd_Set_Cursor(1,3);
  1638  0590  0189               	clrf	9	;volatile
  1639  0591                     l1832:
  1640                           
  1641                           ;lab2_main.c: 252:     Lcd_Write_String("0.00");
  1642  0591  178B               	bsf	11,7	;volatile
  1643  0592                     l1834:
  1644                           
  1645                           ;lab2_main.c: 255:     Lcd_Set_Cursor(2,7);
  1646  0592  120A  118A  251E  120A  118A  	fcall	_Lcd_Init
  1647  0597                     l1836:
  1648                           
  1649                           ;lab2_main.c: 259:     Lcd_Set_Cursor(2,13);
  1650  0597  3000               	movlw	0
  1651  0598  120A  118A  23CD  120A  118A  	fcall	_initADC
  1652  059D                     l1838:
  1653                           
  1654                           ;lab2_main.c: 260:     Lcd_Write_String("000");
  1655  059D  3001               	movlw	1
  1656  059E  120A  118A  23CD  120A  118A  	fcall	_initADC
  1657  05A3                     l1840:
  1658  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  1659  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  1660  05A5  1281               	bcf	1,5	;volatile
  1661  05A6                     l1842:
  1662  05A6  1181               	bcf	1,3	;volatile
  1663  05A7                     l1844:
  1664  05A7  3007               	movlw	7
  1665  05A8  0481               	iorwf	1,f	;volatile
  1666  05A9                     l1846:
  1667  05A9  300A               	movlw	10
  1668  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1669  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1670  05AC  0081               	movwf	1	;volatile
  1671  05AD                     l1848:
  1672  05AD  168B               	bsf	11,5	;volatile
  1673  05AE                     l1850:
  1674  05AE  110B               	bcf	11,2	;volatile
  1675  05AF                     l1852:
  1676  05AF  120A  118A  2666  120A  118A  	fcall	_initUSART
  1677  05B4                     l1854:
  1678  05B4  120A  118A  244C  120A  118A  	fcall	_displayLCD
  1679  05B9                     l239:
  1680  05B9  0008               	return
  1681  05BA                     __end_of_setup:
  1682                           
  1683                           	psect	text2
  1684  0666                     __ptext2:	
  1685 ;; *************** function _initUSART *****************
  1686 ;; Defined at:
  1687 ;;		line 3 in file "USART.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    1
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_setup
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _initUSART
  1717  0666                     _initUSART:
  1718  0666                     l1368:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _initUSART: [wreg+status,2]
  1721                           
  1722                           
  1723                           ;USART.c: 5:     TRISCbits.TRISC6 = 0;
  1724  0666  1683               	bsf	3,5	;RP0=1, select bank1
  1725  0667  1303               	bcf	3,6	;RP1=0, select bank1
  1726  0668  1307               	bcf	7,6	;volatile
  1727                           
  1728                           ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  1729  0669  1787               	bsf	7,7	;volatile
  1730                           
  1731                           ;USART.c: 9:     TXSTAbits.SYNC = 0;
  1732  066A  1218               	bcf	24,4	;volatile
  1733                           
  1734                           ;USART.c: 10:     TXSTAbits.BRGH = 1;
  1735  066B  1518               	bsf	24,2	;volatile
  1736                           
  1737                           ;USART.c: 12:     BAUDCTLbits.BRG16 = 1;
  1738  066C  1683               	bsf	3,5	;RP0=1, select bank3
  1739  066D  1703               	bsf	3,6	;RP1=1, select bank3
  1740  066E  1587               	bsf	7,3	;volatile
  1741  066F                     l1370:
  1742                           
  1743                           ;USART.c: 14:     SPBRG = 207;
  1744  066F  30CF               	movlw	207
  1745  0670  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0671  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0672  0099               	movwf	25	;volatile
  1748  0673                     l1372:
  1749                           
  1750                           ;USART.c: 15:     SPBRGH = 0;
  1751  0673  019A               	clrf	26	;volatile
  1752  0674                     l1374:
  1753                           
  1754                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
  1755  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1757  0676  1798               	bsf	24,7	;volatile
  1758  0677                     l1376:
  1759                           
  1760                           ;USART.c: 18:     RCSTAbits.RX9 = 0;
  1761  0677  1318               	bcf	24,6	;volatile
  1762  0678                     l1378:
  1763                           
  1764                           ;USART.c: 19:     RCSTAbits.CREN = 1;
  1765  0678  1618               	bsf	24,4	;volatile
  1766  0679                     l1380:
  1767                           
  1768                           ;USART.c: 21:     TXSTAbits.TXEN = 1;
  1769  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1770  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1771  067B  1698               	bsf	24,5	;volatile
  1772  067C                     l1382:
  1773                           
  1774                           ;USART.c: 24:     INTCONbits.PEIE = 1;
  1775  067C  170B               	bsf	11,6	;volatile
  1776  067D                     l85:
  1777  067D  0008               	return
  1778  067E                     __end_of_initUSART:
  1779                           
  1780                           	psect	text3
  1781  03CD                     __ptext3:	
  1782 ;; *************** function _initADC *****************
  1783 ;; Defined at:
  1784 ;;		line 6 in file "ADC.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  channel         1    wreg     unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  channel         1    5[COMMON] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         1       0       0       0       0
  1800 ;;      Temps:          2       0       0       0       0
  1801 ;;      Totals:         3       0       0       0       0
  1802 ;;Total ram usage:        3 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_setup
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _initADC
  1814  03CD                     _initADC:
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
  1818                           ;initADC@channel stored from wreg
  1819  03CD  00F5               	movwf	initADC@channel
  1820  03CE                     l1324:
  1821                           
  1822                           ;ADC.c: 9:     ADCON1bits.ADFM = 0;
  1823  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  1824  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  1825  03D0  139F               	bcf	31,7	;volatile
  1826                           
  1827                           ;ADC.c: 10:     ADCON1bits.VCFG0 = 0;
  1828  03D1  121F               	bcf	31,4	;volatile
  1829                           
  1830                           ;ADC.c: 11:     ADCON1bits.VCFG1 = 0;
  1831  03D2  129F               	bcf	31,5	;volatile
  1832  03D3                     l1326:
  1833                           
  1834                           ;ADC.c: 13:     ADCON0bits.ADCS = 0b10;
  1835  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1836  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1837  03D5  081F               	movf	31,w	;volatile
  1838  03D6  393F               	andlw	-193
  1839  03D7  3880               	iorlw	128
  1840  03D8  009F               	movwf	31	;volatile
  1841                           
  1842                           ;ADC.c: 14:     ADCON0bits.CHS = 0;
  1843  03D9  30C3               	movlw	-61
  1844  03DA  059F               	andwf	31,f	;volatile
  1845  03DB                     l1328:
  1846                           
  1847                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  1848  03DB  141F               	bsf	31,0	;volatile
  1849  03DC                     l1330:
  1850                           
  1851                           ;ADC.c: 17:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1852  03DC  3021               	movlw	33
  1853  03DD  00F3               	movwf	??_initADC
  1854  03DE                     u1067:
  1855  03DE  0BF3               	decfsz	??_initADC,f
  1856  03DF  2BDE               	goto	u1067
  1857  03E0                     l1332:
  1858                           
  1859                           ;ADC.c: 18:     ADCON0bits.GO = 1;
  1860  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1861  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1862  03E2  149F               	bsf	31,1	;volatile
  1863  03E3                     l1334:
  1864                           
  1865                           ;ADC.c: 20:     PIE1bits.ADIE = 1;
  1866  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  1867  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  1868  03E5  170C               	bsf	12,6	;volatile
  1869  03E6                     l1336:
  1870                           
  1871                           ;ADC.c: 21:     PIR1bits.ADIF = 0;
  1872  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1873  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1874  03E8  130C               	bcf	12,6	;volatile
  1875                           
  1876                           ;ADC.c: 24:     switch(channel){
  1877  03E9  2C29               	goto	l1340
  1878  03EA                     l20:	
  1879                           ;ADC.c: 25:         case 0:
  1880                           
  1881                           
  1882                           ;ADC.c: 26:             TRISAbits.TRISA0 = 1;
  1883  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1884  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  1885  03EC  1405               	bsf	5,0	;volatile
  1886                           
  1887                           ;ADC.c: 27:             ANSELbits.ANS0 = 1;
  1888  03ED  1683               	bsf	3,5	;RP0=1, select bank3
  1889  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  1890  03EF  1408               	bsf	8,0	;volatile
  1891                           
  1892                           ;ADC.c: 28:             break;
  1893  03F0  2C4B               	goto	l30
  1894  03F1                     l22:	
  1895                           ;ADC.c: 29:         case 1:
  1896                           
  1897                           
  1898                           ;ADC.c: 30:             TRISAbits.TRISA1 = 1;
  1899  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  1900  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  1901  03F3  1485               	bsf	5,1	;volatile
  1902                           
  1903                           ;ADC.c: 31:             ANSELbits.ANS1 = 1;
  1904  03F4  1683               	bsf	3,5	;RP0=1, select bank3
  1905  03F5  1703               	bsf	3,6	;RP1=1, select bank3
  1906  03F6  1488               	bsf	8,1	;volatile
  1907                           
  1908                           ;ADC.c: 32:             break;
  1909  03F7  2C4B               	goto	l30
  1910  03F8                     l23:	
  1911                           ;ADC.c: 33:         case 2:
  1912                           
  1913                           
  1914                           ;ADC.c: 34:             TRISAbits.TRISA2 = 1;
  1915  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1916  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1917  03FA  1505               	bsf	5,2	;volatile
  1918                           
  1919                           ;ADC.c: 35:             ANSELbits.ANS2 = 1;
  1920  03FB  1683               	bsf	3,5	;RP0=1, select bank3
  1921  03FC  1703               	bsf	3,6	;RP1=1, select bank3
  1922  03FD  1508               	bsf	8,2	;volatile
  1923                           
  1924                           ;ADC.c: 36:             break;
  1925  03FE  2C4B               	goto	l30
  1926  03FF                     l24:	
  1927                           ;ADC.c: 37:         case 3:
  1928                           
  1929                           
  1930                           ;ADC.c: 38:             TRISAbits.TRISA3 = 1;
  1931  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1932  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1933  0401  1585               	bsf	5,3	;volatile
  1934                           
  1935                           ;ADC.c: 39:             ANSELbits.ANS3 = 1;
  1936  0402  1683               	bsf	3,5	;RP0=1, select bank3
  1937  0403  1703               	bsf	3,6	;RP1=1, select bank3
  1938  0404  1588               	bsf	8,3	;volatile
  1939                           
  1940                           ;ADC.c: 40:             break;
  1941  0405  2C4B               	goto	l30
  1942  0406                     l25:	
  1943                           ;ADC.c: 41:         case 4:
  1944                           
  1945                           
  1946                           ;ADC.c: 42:             TRISAbits.TRISA5 = 1;
  1947  0406  1683               	bsf	3,5	;RP0=1, select bank1
  1948  0407  1303               	bcf	3,6	;RP1=0, select bank1
  1949  0408  1685               	bsf	5,5	;volatile
  1950                           
  1951                           ;ADC.c: 43:             ANSELbits.ANS4 = 1;
  1952  0409  1683               	bsf	3,5	;RP0=1, select bank3
  1953  040A  1703               	bsf	3,6	;RP1=1, select bank3
  1954  040B  1608               	bsf	8,4	;volatile
  1955                           
  1956                           ;ADC.c: 44:             break;
  1957  040C  2C4B               	goto	l30
  1958  040D                     l26:	
  1959                           ;ADC.c: 45:         case 5:
  1960                           
  1961                           
  1962                           ;ADC.c: 46:             TRISEbits.TRISE0 = 1;
  1963  040D  1683               	bsf	3,5	;RP0=1, select bank1
  1964  040E  1303               	bcf	3,6	;RP1=0, select bank1
  1965  040F  1409               	bsf	9,0	;volatile
  1966                           
  1967                           ;ADC.c: 47:             ANSELbits.ANS5 = 1;
  1968  0410  1683               	bsf	3,5	;RP0=1, select bank3
  1969  0411  1703               	bsf	3,6	;RP1=1, select bank3
  1970  0412  1688               	bsf	8,5	;volatile
  1971                           
  1972                           ;ADC.c: 48:             break;
  1973  0413  2C4B               	goto	l30
  1974  0414                     l27:	
  1975                           ;ADC.c: 49:         case 6:
  1976                           
  1977                           
  1978                           ;ADC.c: 50:             TRISEbits.TRISE1 = 1;
  1979  0414  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0415  1303               	bcf	3,6	;RP1=0, select bank1
  1981  0416  1489               	bsf	9,1	;volatile
  1982                           
  1983                           ;ADC.c: 51:             ANSELbits.ANS6 = 1;
  1984  0417  1683               	bsf	3,5	;RP0=1, select bank3
  1985  0418  1703               	bsf	3,6	;RP1=1, select bank3
  1986  0419  1708               	bsf	8,6	;volatile
  1987                           
  1988                           ;ADC.c: 52:             break;
  1989  041A  2C4B               	goto	l30
  1990  041B                     l28:	
  1991                           ;ADC.c: 53:         case 7:
  1992                           
  1993                           
  1994                           ;ADC.c: 54:             TRISEbits.TRISE2 = 1;
  1995  041B  1683               	bsf	3,5	;RP0=1, select bank1
  1996  041C  1303               	bcf	3,6	;RP1=0, select bank1
  1997  041D  1509               	bsf	9,2	;volatile
  1998                           
  1999                           ;ADC.c: 55:             ANSELbits.ANS7 = 1;
  2000  041E  1683               	bsf	3,5	;RP0=1, select bank3
  2001  041F  1703               	bsf	3,6	;RP1=1, select bank3
  2002  0420  1788               	bsf	8,7	;volatile
  2003                           
  2004                           ;ADC.c: 56:             break;
  2005  0421  2C4B               	goto	l30
  2006  0422                     l29:	
  2007                           ;ADC.c: 57:         default:
  2008                           
  2009                           
  2010                           ;ADC.c: 58:             TRISAbits.TRISA0 = 1;
  2011  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2012  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2013  0424  1405               	bsf	5,0	;volatile
  2014                           
  2015                           ;ADC.c: 59:             ANSELbits.ANS0 = 1;
  2016  0425  1683               	bsf	3,5	;RP0=1, select bank3
  2017  0426  1703               	bsf	3,6	;RP1=1, select bank3
  2018  0427  1408               	bsf	8,0	;volatile
  2019                           
  2020                           ;ADC.c: 60:             break;
  2021  0428  2C4B               	goto	l30
  2022  0429                     l1340:
  2023  0429  0875               	movf	initADC@channel,w
  2024  042A  00F3               	movwf	??_initADC
  2025  042B  01F4               	clrf	??_initADC+1
  2026                           
  2027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2028                           ; Switch size 1, requested type "simple"
  2029                           ; Number of cases is 1, Range of values is 0 to 0
  2030                           ; switch strategies available:
  2031                           ; Name         Instructions Cycles
  2032                           ; simple_byte            4     3 (average)
  2033                           ; direct_byte           11     8 (fixed)
  2034                           ; jumptable            260     6 (fixed)
  2035                           ;	Chosen strategy is simple_byte
  2036  042C  0874               	movf	??_initADC+1,w
  2037  042D  3A00               	xorlw	0	; case 0
  2038  042E  1903               	skipnz
  2039  042F  2C31               	goto	l1976
  2040  0430  2C22               	goto	l29
  2041  0431                     l1976:
  2042                           
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 8, Range of values is 0 to 7
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte           25    13 (average)
  2048                           ; direct_byte           32     8 (fixed)
  2049                           ; jumptable            260     6 (fixed)
  2050                           ;	Chosen strategy is simple_byte
  2051  0431  0873               	movf	??_initADC,w
  2052  0432  3A00               	xorlw	0	; case 0
  2053  0433  1903               	skipnz
  2054  0434  2BEA               	goto	l20
  2055  0435  3A01               	xorlw	1	; case 1
  2056  0436  1903               	skipnz
  2057  0437  2BF1               	goto	l22
  2058  0438  3A03               	xorlw	3	; case 2
  2059  0439  1903               	skipnz
  2060  043A  2BF8               	goto	l23
  2061  043B  3A01               	xorlw	1	; case 3
  2062  043C  1903               	skipnz
  2063  043D  2BFF               	goto	l24
  2064  043E  3A07               	xorlw	7	; case 4
  2065  043F  1903               	skipnz
  2066  0440  2C06               	goto	l25
  2067  0441  3A01               	xorlw	1	; case 5
  2068  0442  1903               	skipnz
  2069  0443  2C0D               	goto	l26
  2070  0444  3A03               	xorlw	3	; case 6
  2071  0445  1903               	skipnz
  2072  0446  2C14               	goto	l27
  2073  0447  3A01               	xorlw	1	; case 7
  2074  0448  1903               	skipnz
  2075  0449  2C1B               	goto	l28
  2076  044A  2C22               	goto	l29
  2077  044B                     l30:
  2078  044B  0008               	return
  2079  044C                     __end_of_initADC:
  2080                           
  2081                           	psect	text4
  2082  044C                     __ptext4:	
  2083 ;; *************** function _displayLCD *****************
  2084 ;; Defined at:
  2085 ;;		line 283 in file "lab2_main.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0
  2101 ;;      Temps:          0       1       0       0       0
  2102 ;;      Totals:         0       1       0       0       0
  2103 ;;Total ram usage:        1 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    4
  2106 ;; This function calls:
  2107 ;;		_Lcd_Set_Cursor
  2108 ;;		_Lcd_Write_String
  2109 ;; This function is called by:
  2110 ;;		_setup
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function _displayLCD
  2116  044C                     _displayLCD:
  2117  044C                     l1794:	
  2118                           ;incstack = 0
  2119                           ; Regs used in _displayLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2120                           
  2121  044C  3003               	movlw	3
  2122  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2123  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2124  044F  00A3               	movwf	??_displayLCD
  2125  0450  0823               	movf	??_displayLCD,w
  2126  0451  00F7               	movwf	Lcd_Set_Cursor@b
  2127  0452  3001               	movlw	1
  2128  0453  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  2129  0458                     l1796:
  2130  0458  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2131  0459  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  2132  045E                     l1798:
  2133  045E  01F7               	clrf	Lcd_Set_Cursor@b
  2134  045F  0AF7               	incf	Lcd_Set_Cursor@b,f
  2135  0460  3002               	movlw	2
  2136  0461  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  2137  0466  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2138  0467  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  2139  046C                     l1800:
  2140  046C  3008               	movlw	8
  2141  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2142  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2143  046F  00A3               	movwf	??_displayLCD
  2144  0470  0823               	movf	??_displayLCD,w
  2145  0471  00F7               	movwf	Lcd_Set_Cursor@b
  2146  0472  3001               	movlw	1
  2147  0473  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  2148  0478                     l1802:
  2149  0478  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2150  0479  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  2151  047E  3007               	movlw	7
  2152  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0481  00A3               	movwf	??_displayLCD
  2155  0482  0823               	movf	??_displayLCD,w
  2156  0483  00F7               	movwf	Lcd_Set_Cursor@b
  2157  0484  3002               	movlw	2
  2158  0485  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  2159  048A                     l1804:
  2160  048A  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2161  048B  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  2162  0490                     l1806:
  2163  0490  300E               	movlw	14
  2164  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0493  00A3               	movwf	??_displayLCD
  2167  0494  0823               	movf	??_displayLCD,w
  2168  0495  00F7               	movwf	Lcd_Set_Cursor@b
  2169  0496  3001               	movlw	1
  2170  0497  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  2171  049C  3010               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2172  049D  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  2173  04A2                     l1808:
  2174  04A2  300D               	movlw	13
  2175  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2176  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2177  04A5  00A3               	movwf	??_displayLCD
  2178  04A6  0823               	movf	??_displayLCD,w
  2179  04A7  00F7               	movwf	Lcd_Set_Cursor@b
  2180  04A8  3002               	movlw	2
  2181  04A9  120A  118A  260E  120A  118A  	fcall	_Lcd_Set_Cursor
  2182  04AE                     l1810:
  2183  04AE  3006               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2184  04AF  120A  118A  25E5  120A  118A  	fcall	_Lcd_Write_String
  2185  04B4                     l242:
  2186  04B4  0008               	return
  2187  04B5                     __end_of_displayLCD:
  2188                           
  2189                           	psect	text5
  2190  05E5                     __ptext5:	
  2191 ;; *************** function _Lcd_Write_String *****************
  2192 ;; Defined at:
  2193 ;;		line 73 in file "LCD.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  a               1    wreg     PTR unsigned char 
  2196 ;;		 -> STR_6(4), STR_5(3), STR_4(5), STR_3(3), 
  2197 ;;		 -> STR_2(5), STR_1(3), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2200 ;;		 -> STR_6(4), STR_5(3), STR_4(5), STR_3(3), 
  2201 ;;		 -> STR_2(5), STR_1(3), 
  2202 ;;  i               2    0[BANK0 ] int 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       3       0       0       0
  2214 ;;      Temps:          0       0       0       0       0
  2215 ;;      Totals:         0       3       0       0       0
  2216 ;;Total ram usage:        3 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    3
  2219 ;; This function calls:
  2220 ;;		_Lcd_Write_Char
  2221 ;; This function is called by:
  2222 ;;		_displayLCD
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _Lcd_Write_String
  2228  05E5                     _Lcd_Write_String:
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2232                           ;Lcd_Write_String@a stored from wreg
  2233  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2234  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2235  05E7  00A2               	movwf	Lcd_Write_String@a
  2236  05E8                     l1764:
  2237                           
  2238                           ;LCD.c: 73: void Lcd_Write_String(char *a);LCD.c: 74: {;LCD.c: 75:  int i;;LCD.c: 76:  f
      +                          or(i=0;a[i]!='\0';i++)
  2239  05E8  01A0               	clrf	Lcd_Write_String@i
  2240  05E9  01A1               	clrf	Lcd_Write_String@i+1
  2241  05EA  2E00               	goto	l1770
  2242  05EB                     l1766:
  2243                           
  2244                           ;LCD.c: 77:     Lcd_Write_Char(a[i]);
  2245  05EB  0820               	movf	Lcd_Write_String@i,w
  2246  05EC  0722               	addwf	Lcd_Write_String@a,w
  2247  05ED  0084               	movwf	4
  2248  05EE  120A  118A  264E  120A  118A  	fcall	stringdir
  2249  05F3  120A  118A  267E  120A  118A  	fcall	_Lcd_Write_Char
  2250  05F8                     l1768:
  2251  05F8  3001               	movlw	1
  2252  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  2253  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  2254  05FB  07A0               	addwf	Lcd_Write_String@i,f
  2255  05FC  1803               	skipnc
  2256  05FD  0AA1               	incf	Lcd_Write_String@i+1,f
  2257  05FE  3000               	movlw	0
  2258  05FF  07A1               	addwf	Lcd_Write_String@i+1,f
  2259  0600                     l1770:
  2260  0600  0820               	movf	Lcd_Write_String@i,w
  2261  0601  0722               	addwf	Lcd_Write_String@a,w
  2262  0602  0084               	movwf	4
  2263  0603  120A  118A  264E  120A  118A  	fcall	stringdir
  2264  0608  3A00               	xorlw	0
  2265  0609  1D03               	skipz
  2266  060A  2E0C               	goto	u931
  2267  060B  2E0D               	goto	u930
  2268  060C                     u931:
  2269  060C  2DEB               	goto	l1766
  2270  060D                     u930:
  2271  060D                     l62:
  2272  060D  0008               	return
  2273  060E                     __end_of_Lcd_Write_String:
  2274                           
  2275                           	psect	text6
  2276  067E                     __ptext6:	
  2277 ;; *************** function _Lcd_Write_Char *****************
  2278 ;; Defined at:
  2279 ;;		line 64 in file "LCD.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  a               1    wreg     unsigned char 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  a               1    5[COMMON] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, pclath, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       0       0       0       0
  2294 ;;      Locals:         1       0       0       0       0
  2295 ;;      Temps:          1       0       0       0       0
  2296 ;;      Totals:         2       0       0       0       0
  2297 ;;Total ram usage:        2 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    2
  2300 ;; This function calls:
  2301 ;;		_Lcd_Port
  2302 ;; This function is called by:
  2303 ;;		_Lcd_Write_String
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _Lcd_Write_Char
  2310  067E                     _Lcd_Write_Char:
  2311                           
  2312                           ;incstack = 0
  2313                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2314                           ;Lcd_Write_Char@a stored from wreg
  2315  067E  00F5               	movwf	Lcd_Write_Char@a
  2316  067F                     l1742:
  2317                           
  2318                           ;LCD.c: 64: void Lcd_Write_Char(char a);LCD.c: 65: {;LCD.c: 66:     RE0 = 1;
  2319  067F  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0680  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0681  1409               	bsf	9,0	;volatile
  2322  0682                     l1744:
  2323                           
  2324                           ;LCD.c: 67:    Lcd_Port(a);
  2325  0682  0875               	movf	Lcd_Write_Char@a,w
  2326  0683  120A  118A  26A9  120A  118A  	fcall	_Lcd_Port
  2327  0688                     l1746:
  2328                           
  2329                           ;LCD.c: 68:    RE1 = 1;
  2330  0688  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0689  1303               	bcf	3,6	;RP1=0, select bank0
  2332  068A  1489               	bsf	9,1	;volatile
  2333  068B                     l1748:
  2334                           
  2335                           ;LCD.c: 69:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2336  068B  301A               	movlw	26
  2337  068C  00F4               	movwf	??_Lcd_Write_Char
  2338  068D                     u1077:
  2339  068D  0BF4               	decfsz	??_Lcd_Write_Char,f
  2340  068E  2E8D               	goto	u1077
  2341  068F  0000               	nop
  2342  0690                     l1750:
  2343                           
  2344                           ;LCD.c: 70:    RE1 = 0;
  2345  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0692  1089               	bcf	9,1	;volatile
  2348  0693                     l56:
  2349  0693  0008               	return
  2350  0694                     __end_of_Lcd_Write_Char:
  2351                           
  2352                           	psect	text7
  2353  060E                     __ptext7:	
  2354 ;; *************** function _Lcd_Set_Cursor *****************
  2355 ;; Defined at:
  2356 ;;		line 31 in file "LCD.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  a               1    wreg     unsigned char 
  2359 ;;  b               1    7[COMMON] unsigned char 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  a               1    1[BANK0 ] unsigned char 
  2362 ;;  temp            1    2[BANK0 ] unsigned char 
  2363 ;;  y               1    0        unsigned char 
  2364 ;;  z               1    0        unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         1       0       0       0       0
  2375 ;;      Locals:         0       2       0       0       0
  2376 ;;      Temps:          0       1       0       0       0
  2377 ;;      Totals:         1       3       0       0       0
  2378 ;;Total ram usage:        4 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		_Lcd_Cmd
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;;		_displayLCD
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _Lcd_Set_Cursor
  2391  060E                     _Lcd_Set_Cursor:
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2395                           ;Lcd_Set_Cursor@a stored from wreg
  2396  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2397  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0610  00A1               	movwf	Lcd_Set_Cursor@a
  2399  0611                     l1752:
  2400                           
  2401                           ;LCD.c: 31: void Lcd_Set_Cursor(char a, char b);LCD.c: 32: {;LCD.c: 33:  char temp,z,y;;
      +                          LCD.c: 34:  if(a == 1)
  2402  0611  0321               	decf	Lcd_Set_Cursor@a,w
  2403  0612  1D03               	btfss	3,2
  2404  0613  2E15               	goto	u911
  2405  0614  2E16               	goto	u910
  2406  0615                     u911:
  2407  0615  2E22               	goto	l1758
  2408  0616                     u910:
  2409  0616                     l1754:
  2410                           
  2411                           ;LCD.c: 35:  {;LCD.c: 36:    temp = 0x80 + b - 1;
  2412  0616  0877               	movf	Lcd_Set_Cursor@b,w
  2413  0617  3E7F               	addlw	127
  2414  0618  00A0               	movwf	??_Lcd_Set_Cursor
  2415  0619  0820               	movf	??_Lcd_Set_Cursor,w
  2416  061A  00A2               	movwf	Lcd_Set_Cursor@temp
  2417  061B                     l1756:
  2418                           
  2419                           ;LCD.c: 37:   Lcd_Cmd(temp);
  2420  061B  0822               	movf	Lcd_Set_Cursor@temp,w
  2421  061C  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2422                           
  2423                           ;LCD.c: 38:  }
  2424  0621  2E33               	goto	l50
  2425  0622                     l1758:
  2426  0622  3002               	movlw	2
  2427  0623  0621               	xorwf	Lcd_Set_Cursor@a,w
  2428  0624  1D03               	btfss	3,2
  2429  0625  2E27               	goto	u921
  2430  0626  2E28               	goto	u920
  2431  0627                     u921:
  2432  0627  2E33               	goto	l50
  2433  0628                     u920:
  2434  0628                     l1760:
  2435                           
  2436                           ;LCD.c: 40:  {;LCD.c: 41:   temp = 0xC0 + b - 1;
  2437  0628  0877               	movf	Lcd_Set_Cursor@b,w
  2438  0629  3EBF               	addlw	191
  2439  062A  00A0               	movwf	??_Lcd_Set_Cursor
  2440  062B  0820               	movf	??_Lcd_Set_Cursor,w
  2441  062C  00A2               	movwf	Lcd_Set_Cursor@temp
  2442  062D                     l1762:
  2443                           
  2444                           ;LCD.c: 42:   Lcd_Cmd(temp);
  2445  062D  0822               	movf	Lcd_Set_Cursor@temp,w
  2446  062E  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2447  0633                     l50:
  2448  0633  0008               	return
  2449  0634                     __end_of_Lcd_Set_Cursor:
  2450                           
  2451                           	psect	text8
  2452  051E                     __ptext8:	
  2453 ;; *************** function _Lcd_Init *****************
  2454 ;; Defined at:
  2455 ;;		line 46 in file "LCD.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0
  2471 ;;      Temps:          0       2       0       0       0
  2472 ;;      Totals:         0       2       0       0       0
  2473 ;;Total ram usage:        2 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		_Lcd_Cmd
  2478 ;;		_Lcd_Port
  2479 ;; This function is called by:
  2480 ;;		_setup
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _Lcd_Init
  2486  051E                     _Lcd_Init:
  2487  051E                     l1772:	
  2488                           ;incstack = 0
  2489                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2490                           
  2491                           
  2492                           ;LCD.c: 47:    _delay((unsigned long)((15)*(8000000/4000.0)));
  2493  051E  3027               	movlw	39
  2494  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0521  00A1               	movwf	??_Lcd_Init+1
  2497  0522  30F4               	movlw	244
  2498  0523  00A0               	movwf	??_Lcd_Init
  2499  0524                     u1087:
  2500  0524  0BA0               	decfsz	??_Lcd_Init,f
  2501  0525  2D24               	goto	u1087
  2502  0526  0BA1               	decfsz	??_Lcd_Init+1,f
  2503  0527  2D24               	goto	u1087
  2504  0528  0000               	nop
  2505  0529                     l1774:
  2506                           
  2507                           ;LCD.c: 48:   Lcd_Port(0x00);
  2508  0529  3000               	movlw	0
  2509  052A  120A  118A  26A9  120A  118A  	fcall	_Lcd_Port
  2510  052F                     l1776:
  2511                           
  2512                           ;LCD.c: 49:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2513  052F  3034               	movlw	52
  2514  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0532  00A1               	movwf	??_Lcd_Init+1
  2517  0533  30F1               	movlw	241
  2518  0534  00A0               	movwf	??_Lcd_Init
  2519  0535                     u1097:
  2520  0535  0BA0               	decfsz	??_Lcd_Init,f
  2521  0536  2D35               	goto	u1097
  2522  0537  0BA1               	decfsz	??_Lcd_Init+1,f
  2523  0538  2D35               	goto	u1097
  2524                           
  2525                           ;LCD.c: 50:   Lcd_Cmd(0x030);
  2526  0539  3030               	movlw	48
  2527  053A  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2528  053F                     l1778:
  2529                           
  2530                           ;LCD.c: 51:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2531  053F  300D               	movlw	13
  2532  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0542  00A1               	movwf	??_Lcd_Init+1
  2535  0543  30FB               	movlw	251
  2536  0544  00A0               	movwf	??_Lcd_Init
  2537  0545                     u1107:
  2538  0545  0BA0               	decfsz	??_Lcd_Init,f
  2539  0546  2D45               	goto	u1107
  2540  0547  0BA1               	decfsz	??_Lcd_Init+1,f
  2541  0548  2D45               	goto	u1107
  2542  0549                     l1780:
  2543                           
  2544                           ;LCD.c: 52:   Lcd_Cmd(0x030);
  2545  0549  3030               	movlw	48
  2546  054A  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2547                           
  2548                           ;LCD.c: 53:  _delay((unsigned long)((160)*(8000000/4000000.0)));
  2549  054F  3069               	movlw	105
  2550  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0552  00A0               	movwf	??_Lcd_Init
  2553  0553                     u1117:
  2554  0553  0BA0               	decfsz	??_Lcd_Init,f
  2555  0554  2D53               	goto	u1117
  2556  0555  2D56               	nop2
  2557  0556                     l1782:
  2558                           
  2559                           ;LCD.c: 54:   Lcd_Cmd(0x030);
  2560  0556  3030               	movlw	48
  2561  0557  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2562  055C                     l1784:
  2563                           
  2564                           ;LCD.c: 56:   Lcd_Cmd(0x038);
  2565  055C  3038               	movlw	56
  2566  055D  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2567  0562                     l1786:
  2568                           
  2569                           ;LCD.c: 57:   Lcd_Cmd(0x010);
  2570  0562  3010               	movlw	16
  2571  0563  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2572  0568                     l1788:
  2573                           
  2574                           ;LCD.c: 58:   Lcd_Cmd(0x001);
  2575  0568  3001               	movlw	1
  2576  0569  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2577  056E                     l1790:
  2578                           
  2579                           ;LCD.c: 59:   Lcd_Cmd(0x006);
  2580  056E  3006               	movlw	6
  2581  056F  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2582  0574                     l1792:
  2583                           
  2584                           ;LCD.c: 61:   Lcd_Cmd(0x0C);
  2585  0574  300C               	movlw	12
  2586  0575  120A  118A  2634  120A  118A  	fcall	_Lcd_Cmd
  2587  057A                     l53:
  2588  057A  0008               	return
  2589  057B                     __end_of_Lcd_Init:
  2590                           
  2591                           	psect	text9
  2592  0634                     __ptext9:	
  2593 ;; *************** function _Lcd_Cmd *****************
  2594 ;; Defined at:
  2595 ;;		line 16 in file "LCD.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  a               1    wreg     unsigned char 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  a               1    6[COMMON] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         1       0       0       0       0
  2611 ;;      Temps:          2       0       0       0       0
  2612 ;;      Totals:         3       0       0       0       0
  2613 ;;Total ram usage:        3 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    2
  2616 ;; This function calls:
  2617 ;;		_Lcd_Port
  2618 ;; This function is called by:
  2619 ;;		_Lcd_Set_Cursor
  2620 ;;		_Lcd_Init
  2621 ;;		_Lcd_Shift_Right
  2622 ;;		_Lcd_Shift_Left
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _Lcd_Cmd
  2628  0634                     _Lcd_Cmd:
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2632                           ;Lcd_Cmd@a stored from wreg
  2633  0634  00F6               	movwf	Lcd_Cmd@a
  2634  0635                     l1732:
  2635                           
  2636                           ;LCD.c: 16: void Lcd_Cmd(char a);LCD.c: 17: {;LCD.c: 18:  RE0 = 0;
  2637  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0637  1009               	bcf	9,0	;volatile
  2640  0638                     l1734:
  2641                           
  2642                           ;LCD.c: 19:  Lcd_Port(a);
  2643  0638  0876               	movf	Lcd_Cmd@a,w
  2644  0639  120A  118A  26A9  120A  118A  	fcall	_Lcd_Port
  2645  063E                     l1736:
  2646                           
  2647                           ;LCD.c: 20:  RE1 = 1;
  2648  063E  1283               	bcf	3,5	;RP0=0, select bank0
  2649  063F  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0640  1489               	bsf	9,1	;volatile
  2651  0641                     l1738:
  2652                           
  2653                           ;LCD.c: 22:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2654  0641  301A               	movlw	26
  2655  0642  00F5               	movwf	??_Lcd_Cmd+1
  2656  0643  30F8               	movlw	248
  2657  0644  00F4               	movwf	??_Lcd_Cmd
  2658  0645                     u1127:
  2659  0645  0BF4               	decfsz	??_Lcd_Cmd,f
  2660  0646  2E45               	goto	u1127
  2661  0647  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2662  0648  2E45               	goto	u1127
  2663  0649  0000               	nop
  2664  064A                     l1740:
  2665                           
  2666                           ;LCD.c: 23:     RE1 = 0;
  2667  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2668  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2669  064C  1089               	bcf	9,1	;volatile
  2670  064D                     l44:
  2671  064D  0008               	return
  2672  064E                     __end_of_Lcd_Cmd:
  2673                           
  2674                           	psect	text10
  2675  06A9                     __ptext10:	
  2676 ;; *************** function _Lcd_Port *****************
  2677 ;; Defined at:
  2678 ;;		line 12 in file "LCD.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  a               1    wreg     unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  a               1    3[COMMON] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         1       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0
  2695 ;;      Totals:         1       0       0       0       0
  2696 ;;Total ram usage:        1 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    1
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_Lcd_Cmd
  2703 ;;		_Lcd_Init
  2704 ;;		_Lcd_Write_Char
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _Lcd_Port
  2710  06A9                     _Lcd_Port:
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _Lcd_Port: [wreg]
  2714                           ;Lcd_Port@a stored from wreg
  2715  06A9  00F3               	movwf	Lcd_Port@a
  2716  06AA                     l1730:
  2717                           
  2718                           ;LCD.c: 12: void Lcd_Port(char a);LCD.c: 13: {;LCD.c: 14:  PORTD = a;
  2719  06AA  0873               	movf	Lcd_Port@a,w
  2720  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2721  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2722  06AD  0088               	movwf	8	;volatile
  2723  06AE                     l41:
  2724  06AE  0008               	return
  2725  06AF                     __end_of_Lcd_Port:
  2726                           
  2727                           	psect	text11
  2728  05BA                     __ptext11:	
  2729 ;; *************** function ___wmul *****************
  2730 ;; Defined at:
  2731 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  multiplier      2    3[COMMON] unsigned int 
  2734 ;;  multiplicand    2    5[COMMON] unsigned int 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  product         2    0[BANK0 ] unsigned int 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  2    3[COMMON] unsigned int 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         4       0       0       0       0
  2747 ;;      Locals:         0       2       0       0       0
  2748 ;;      Temps:          0       0       0       0       0
  2749 ;;      Totals:         4       2       0       0       0
  2750 ;;Total ram usage:        6 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function ___wmul
  2762  05BA                     ___wmul:
  2763  05BA                     l1856:	
  2764                           ;incstack = 0
  2765                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2766                           
  2767  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2768  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2769  05BC  01A0               	clrf	___wmul@product
  2770  05BD  01A1               	clrf	___wmul@product+1
  2771  05BE                     l1858:
  2772  05BE  1C73               	btfss	___wmul@multiplier,0
  2773  05BF  2DC1               	goto	u941
  2774  05C0  2DC2               	goto	u940
  2775  05C1                     u941:
  2776  05C1  2DCA               	goto	l328
  2777  05C2                     u940:
  2778  05C2                     l1860:
  2779  05C2  0875               	movf	___wmul@multiplicand,w
  2780  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2781  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2782  05C5  07A0               	addwf	___wmul@product,f
  2783  05C6  1803               	skipnc
  2784  05C7  0AA1               	incf	___wmul@product+1,f
  2785  05C8  0876               	movf	___wmul@multiplicand+1,w
  2786  05C9  07A1               	addwf	___wmul@product+1,f
  2787  05CA                     l328:
  2788  05CA  3001               	movlw	1
  2789  05CB                     u955:
  2790  05CB  1003               	clrc
  2791  05CC  0DF5               	rlf	___wmul@multiplicand,f
  2792  05CD  0DF6               	rlf	___wmul@multiplicand+1,f
  2793  05CE  3EFF               	addlw	-1
  2794  05CF  1D03               	skipz
  2795  05D0  2DCB               	goto	u955
  2796  05D1                     l1862:
  2797  05D1  3001               	movlw	1
  2798  05D2                     u965:
  2799  05D2  1003               	clrc
  2800  05D3  0CF4               	rrf	___wmul@multiplier+1,f
  2801  05D4  0CF3               	rrf	___wmul@multiplier,f
  2802  05D5  3EFF               	addlw	-1
  2803  05D6  1D03               	skipz
  2804  05D7  2DD2               	goto	u965
  2805  05D8                     l1864:
  2806  05D8  0873               	movf	___wmul@multiplier,w
  2807  05D9  0474               	iorwf	___wmul@multiplier+1,w
  2808  05DA  1D03               	btfss	3,2
  2809  05DB  2DDD               	goto	u971
  2810  05DC  2DDE               	goto	u970
  2811  05DD                     u971:
  2812  05DD  2DBE               	goto	l1858
  2813  05DE                     u970:
  2814  05DE                     l1866:
  2815  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2816  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2817  05E0  0821               	movf	___wmul@product+1,w
  2818  05E1  00F4               	movwf	?___wmul+1
  2819  05E2  0820               	movf	___wmul@product,w
  2820  05E3  00F3               	movwf	?___wmul
  2821  05E4                     l330:
  2822  05E4  0008               	return
  2823  05E5                     __end_of___wmul:
  2824                           
  2825                           	psect	text12
  2826  0694                     __ptext12:	
  2827 ;; *************** function ___bmul *****************
  2828 ;; Defined at:
  2829 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  multiplier      1    wreg     unsigned char 
  2832 ;;  multiplicand    1    3[COMMON] unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  multiplier      1    6[COMMON] unsigned char 
  2835 ;;  product         1    5[COMMON] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      unsigned char 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         1       0       0       0       0
  2846 ;;      Locals:         2       0       0       0       0
  2847 ;;      Temps:          1       0       0       0       0
  2848 ;;      Totals:         4       0       0       0       0
  2849 ;;Total ram usage:        4 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function ___bmul
  2861  0694                     ___bmul:
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2865                           ;___bmul@multiplier stored from wreg
  2866  0694  00F6               	movwf	___bmul@multiplier
  2867  0695                     l1460:
  2868  0695  01F5               	clrf	___bmul@product
  2869  0696                     l1462:
  2870  0696  1C76               	btfss	___bmul@multiplier,0
  2871  0697  2E99               	goto	u531
  2872  0698  2E9A               	goto	u530
  2873  0699                     u531:
  2874  0699  2E9E               	goto	l1466
  2875  069A                     u530:
  2876  069A                     l1464:
  2877  069A  0873               	movf	___bmul@multiplicand,w
  2878  069B  00F4               	movwf	??___bmul
  2879  069C  0874               	movf	??___bmul,w
  2880  069D  07F5               	addwf	___bmul@product,f
  2881  069E                     l1466:
  2882  069E  1003               	clrc
  2883  069F  0DF3               	rlf	___bmul@multiplicand,f
  2884  06A0                     l1468:
  2885  06A0  1003               	clrc
  2886  06A1  0CF6               	rrf	___bmul@multiplier,f
  2887  06A2  0876               	movf	___bmul@multiplier,w
  2888  06A3  1D03               	btfss	3,2
  2889  06A4  2EA6               	goto	u541
  2890  06A5  2EA7               	goto	u540
  2891  06A6                     u541:
  2892  06A6  2E96               	goto	l1462
  2893  06A7                     u540:
  2894  06A7                     l1470:
  2895  06A7  0875               	movf	___bmul@product,w
  2896  06A8                     l354:
  2897  06A8  0008               	return
  2898  06A9                     __end_of___bmul:
  2899                           
  2900                           	psect	text13
  2901  04B5                     __ptext13:	
  2902 ;; *************** function ___awdiv *****************
  2903 ;; Defined at:
  2904 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  divisor         2    2[BANK0 ] int 
  2907 ;;  dividend        2    4[BANK0 ] int 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  quotient        2    8[BANK0 ] int 
  2910 ;;  sign            1    7[BANK0 ] unsigned char 
  2911 ;;  counter         1    6[BANK0 ] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2    2[BANK0 ] int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       4       0       0       0
  2922 ;;      Locals:         0       4       0       0       0
  2923 ;;      Temps:          1       0       0       0       0
  2924 ;;      Totals:         1       8       0       0       0
  2925 ;;Total ram usage:        9 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function ___awdiv
  2937  04B5                     ___awdiv:
  2938  04B5                     l1474:	
  2939                           ;incstack = 0
  2940                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2941                           
  2942  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2943  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2944  04B7  01A7               	clrf	___awdiv@sign
  2945  04B8                     l1476:
  2946  04B8  1FA3               	btfss	___awdiv@divisor+1,7
  2947  04B9  2CBB               	goto	u551
  2948  04BA  2CBC               	goto	u550
  2949  04BB                     u551:
  2950  04BB  2CC3               	goto	l1482
  2951  04BC                     u550:
  2952  04BC                     l1478:
  2953  04BC  09A2               	comf	___awdiv@divisor,f
  2954  04BD  09A3               	comf	___awdiv@divisor+1,f
  2955  04BE  0AA2               	incf	___awdiv@divisor,f
  2956  04BF  1903               	skipnz
  2957  04C0  0AA3               	incf	___awdiv@divisor+1,f
  2958  04C1                     l1480:
  2959  04C1  01A7               	clrf	___awdiv@sign
  2960  04C2  0AA7               	incf	___awdiv@sign,f
  2961  04C3                     l1482:
  2962  04C3  1FA5               	btfss	___awdiv@dividend+1,7
  2963  04C4  2CC6               	goto	u561
  2964  04C5  2CC7               	goto	u560
  2965  04C6                     u561:
  2966  04C6  2CD0               	goto	l1488
  2967  04C7                     u560:
  2968  04C7                     l1484:
  2969  04C7  09A4               	comf	___awdiv@dividend,f
  2970  04C8  09A5               	comf	___awdiv@dividend+1,f
  2971  04C9  0AA4               	incf	___awdiv@dividend,f
  2972  04CA  1903               	skipnz
  2973  04CB  0AA5               	incf	___awdiv@dividend+1,f
  2974  04CC                     l1486:
  2975  04CC  3001               	movlw	1
  2976  04CD  00F7               	movwf	??___awdiv
  2977  04CE  0877               	movf	??___awdiv,w
  2978  04CF  06A7               	xorwf	___awdiv@sign,f
  2979  04D0                     l1488:
  2980  04D0  01A8               	clrf	___awdiv@quotient
  2981  04D1  01A9               	clrf	___awdiv@quotient+1
  2982  04D2                     l1490:
  2983  04D2  0822               	movf	___awdiv@divisor,w
  2984  04D3  0423               	iorwf	___awdiv@divisor+1,w
  2985  04D4  1903               	btfsc	3,2
  2986  04D5  2CD7               	goto	u571
  2987  04D6  2CD8               	goto	u570
  2988  04D7                     u571:
  2989  04D7  2D0F               	goto	l1510
  2990  04D8                     u570:
  2991  04D8                     l1492:
  2992  04D8  01A6               	clrf	___awdiv@counter
  2993  04D9  0AA6               	incf	___awdiv@counter,f
  2994  04DA  2CE6               	goto	l1498
  2995  04DB                     l1494:
  2996  04DB  3001               	movlw	1
  2997  04DC                     u585:
  2998  04DC  1003               	clrc
  2999  04DD  0DA2               	rlf	___awdiv@divisor,f
  3000  04DE  0DA3               	rlf	___awdiv@divisor+1,f
  3001  04DF  3EFF               	addlw	-1
  3002  04E0  1D03               	skipz
  3003  04E1  2CDC               	goto	u585
  3004  04E2                     l1496:
  3005  04E2  3001               	movlw	1
  3006  04E3  00F7               	movwf	??___awdiv
  3007  04E4  0877               	movf	??___awdiv,w
  3008  04E5  07A6               	addwf	___awdiv@counter,f
  3009  04E6                     l1498:
  3010  04E6  1FA3               	btfss	___awdiv@divisor+1,7
  3011  04E7  2CE9               	goto	u591
  3012  04E8  2CEA               	goto	u590
  3013  04E9                     u591:
  3014  04E9  2CDB               	goto	l1494
  3015  04EA                     u590:
  3016  04EA                     l1500:
  3017  04EA  3001               	movlw	1
  3018  04EB                     u605:
  3019  04EB  1003               	clrc
  3020  04EC  0DA8               	rlf	___awdiv@quotient,f
  3021  04ED  0DA9               	rlf	___awdiv@quotient+1,f
  3022  04EE  3EFF               	addlw	-1
  3023  04EF  1D03               	skipz
  3024  04F0  2CEB               	goto	u605
  3025  04F1  0823               	movf	___awdiv@divisor+1,w
  3026  04F2  0225               	subwf	___awdiv@dividend+1,w
  3027  04F3  1D03               	skipz
  3028  04F4  2CF7               	goto	u615
  3029  04F5  0822               	movf	___awdiv@divisor,w
  3030  04F6  0224               	subwf	___awdiv@dividend,w
  3031  04F7                     u615:
  3032  04F7  1C03               	skipc
  3033  04F8  2CFA               	goto	u611
  3034  04F9  2CFB               	goto	u610
  3035  04FA                     u611:
  3036  04FA  2D02               	goto	l1506
  3037  04FB                     u610:
  3038  04FB                     l1502:
  3039  04FB  0822               	movf	___awdiv@divisor,w
  3040  04FC  02A4               	subwf	___awdiv@dividend,f
  3041  04FD  0823               	movf	___awdiv@divisor+1,w
  3042  04FE  1C03               	skipc
  3043  04FF  03A5               	decf	___awdiv@dividend+1,f
  3044  0500  02A5               	subwf	___awdiv@dividend+1,f
  3045  0501                     l1504:
  3046  0501  1428               	bsf	___awdiv@quotient,0
  3047  0502                     l1506:
  3048  0502  3001               	movlw	1
  3049  0503                     u625:
  3050  0503  1003               	clrc
  3051  0504  0CA3               	rrf	___awdiv@divisor+1,f
  3052  0505  0CA2               	rrf	___awdiv@divisor,f
  3053  0506  3EFF               	addlw	-1
  3054  0507  1D03               	skipz
  3055  0508  2D03               	goto	u625
  3056  0509                     l1508:
  3057  0509  3001               	movlw	1
  3058  050A  02A6               	subwf	___awdiv@counter,f
  3059  050B  1D03               	btfss	3,2
  3060  050C  2D0E               	goto	u631
  3061  050D  2D0F               	goto	u630
  3062  050E                     u631:
  3063  050E  2CEA               	goto	l1500
  3064  050F                     u630:
  3065  050F                     l1510:
  3066  050F  0827               	movf	___awdiv@sign,w
  3067  0510  1903               	btfsc	3,2
  3068  0511  2D13               	goto	u641
  3069  0512  2D14               	goto	u640
  3070  0513                     u641:
  3071  0513  2D19               	goto	l1514
  3072  0514                     u640:
  3073  0514                     l1512:
  3074  0514  09A8               	comf	___awdiv@quotient,f
  3075  0515  09A9               	comf	___awdiv@quotient+1,f
  3076  0516  0AA8               	incf	___awdiv@quotient,f
  3077  0517  1903               	skipnz
  3078  0518  0AA9               	incf	___awdiv@quotient+1,f
  3079  0519                     l1514:
  3080  0519  0829               	movf	___awdiv@quotient+1,w
  3081  051A  00A3               	movwf	?___awdiv+1
  3082  051B  0828               	movf	___awdiv@quotient,w
  3083  051C  00A2               	movwf	?___awdiv
  3084  051D                     l481:
  3085  051D  0008               	return
  3086  051E                     __end_of___awdiv:
  3087                           
  3088                           	psect	text14
  3089  02EE                     __ptext14:	
  3090 ;; *************** function _isr *****************
  3091 ;; Defined at:
  3092 ;;		line 67 in file "lab2_main.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0
  3108 ;;      Temps:          3       0       0       0       0
  3109 ;;      Totals:         3       0       0       0       0
  3110 ;;Total ram usage:        3 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		Interrupt level 1
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _isr
  3121  02EE                     _isr:
  3122  02EE                     i1l1522:
  3123                           
  3124                           ;lab2_main.c: 70:                     contador = 0;
  3125  02EE  1D0B               	btfss	11,2	;volatile
  3126  02EF  2AF1               	goto	u65_21
  3127  02F0  2AF2               	goto	u65_20
  3128  02F1                     u65_21:
  3129  02F1  2AF9               	goto	i1l1528
  3130  02F2                     u65_20:
  3131  02F2                     i1l1524:
  3132                           
  3133                           ;lab2_main.c: 71:                 }
  3134  02F2  3001               	movlw	1
  3135  02F3  00F0               	movwf	??_isr
  3136  02F4  0870               	movf	??_isr,w
  3137  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  3138  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  3139  02F7  07BF               	addwf	_cont,f
  3140  02F8                     i1l1526:
  3141                           
  3142                           ;lab2_main.c: 72: 
  3143  02F8  110B               	bcf	11,2	;volatile
  3144  02F9                     i1l1528:
  3145                           
  3146                           ;lab2_main.c: 75:         RC_temp = RCREG;
  3147  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3148  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3149  02FB  1F0C               	btfss	12,6	;volatile
  3150  02FC  2AFE               	goto	u66_21
  3151  02FD  2AFF               	goto	u66_20
  3152  02FE                     u66_21:
  3153  02FE  2B1B               	goto	i1l1548
  3154  02FF                     u66_20:
  3155  02FF                     i1l1530:
  3156                           
  3157                           ;lab2_main.c: 78: 
  3158  02FF  037A               	decf	_bandera,w
  3159  0300  1D03               	btfss	3,2
  3160  0301  2B03               	goto	u67_21
  3161  0302  2B04               	goto	u67_20
  3162  0303                     u67_21:
  3163  0303  2B0B               	goto	i1l1538
  3164  0304                     u67_20:
  3165  0304                     i1l1532:
  3166                           
  3167                           ;lab2_main.c: 79:     if (TXIF == 1){
  3168  0304  081E               	movf	30,w	;volatile
  3169  0305  00F0               	movwf	??_isr
  3170  0306  0870               	movf	??_isr,w
  3171  0307  00C2               	movwf	_ADC1
  3172  0308                     i1l1534:
  3173                           
  3174                           ;lab2_main.c: 80:         if (bandera1 == 0){
  3175  0308  151F               	bsf	31,2	;volatile
  3176  0309                     i1l1536:
  3177                           
  3178                           ;lab2_main.c: 81: 
  3179  0309  01FA               	clrf	_bandera
  3180                           
  3181                           ;lab2_main.c: 82:             TXREG = C11 + 48;
  3182  030A  2B12               	goto	i1l1544
  3183  030B                     i1l1538:
  3184                           
  3185                           ;lab2_main.c: 83:             bandera1 = 1;
  3186  030B  081E               	movf	30,w	;volatile
  3187  030C  00F0               	movwf	??_isr
  3188  030D  0870               	movf	??_isr,w
  3189  030E  00C1               	movwf	_ADC2
  3190  030F                     i1l1540:
  3191                           
  3192                           ;lab2_main.c: 84:         } else if (bandera1 == 1){
  3193  030F  111F               	bcf	31,2	;volatile
  3194  0310                     i1l1542:
  3195                           
  3196                           ;lab2_main.c: 85:             TXREG = 0x2E;
  3197  0310  01FA               	clrf	_bandera
  3198  0311  0AFA               	incf	_bandera,f
  3199  0312                     i1l1544:
  3200                           
  3201                           ;lab2_main.c: 88:             TXREG = C12 + 48;
  3202  0312  130C               	bcf	12,6	;volatile
  3203                           
  3204                           ;lab2_main.c: 89:             bandera1 = 3;
  3205  0313  3027               	movlw	39
  3206  0314  00F0               	movwf	??_isr
  3207  0315                     u113_27:
  3208  0315  0BF0               	decfsz	??_isr,f
  3209  0316  2B15               	goto	u113_27
  3210  0317  2B18               	nop2
  3211  0318                     i1l1546:
  3212                           
  3213                           ;lab2_main.c: 90:         } else if (bandera1 == 3){
  3214  0318  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0319  1303               	bcf	3,6	;RP1=0, select bank0
  3216  031A  149F               	bsf	31,1	;volatile
  3217  031B                     i1l1548:
  3218                           
  3219                           ;lab2_main.c: 92:             bandera1 = 4;
  3220  031B  1E8C               	btfss	12,5	;volatile
  3221  031C  2B1E               	goto	u68_21
  3222  031D  2B1F               	goto	u68_20
  3223  031E                     u68_21:
  3224  031E  2B40               	goto	i1l1570
  3225  031F                     u68_20:
  3226  031F                     i1l1550:
  3227                           
  3228                           ;lab2_main.c: 94:             TXREG = 0x2D;
  3229  031F  1785               	bsf	5,7	;volatile
  3230  0320                     i1l1552:
  3231                           
  3232                           ;lab2_main.c: 95:             bandera1 = 5;
  3233  0320  300D               	movlw	13
  3234  0321  061A               	xorwf	26,w	;volatile
  3235  0322  1D03               	btfss	3,2
  3236  0323  2B25               	goto	u69_21
  3237  0324  2B26               	goto	u69_20
  3238  0325                     u69_21:
  3239  0325  2B3B               	goto	i1l1568
  3240  0326                     u69_20:
  3241  0326                     i1l1554:
  3242                           
  3243                           ;lab2_main.c: 96:         }
  3244  0326  1385               	bcf	5,7	;volatile
  3245  0327                     i1l1556:
  3246                           
  3247                           ;lab2_main.c: 97:         else if (bandera1 == 5){
  3248  0327  302B               	movlw	43
  3249  0328  0679               	xorwf	_RC_temp,w
  3250  0329  1D03               	btfss	3,2
  3251  032A  2B2C               	goto	u70_21
  3252  032B  2B2D               	goto	u70_20
  3253  032C                     u70_21:
  3254  032C  2B32               	goto	i1l1562
  3255  032D                     u70_20:
  3256  032D                     i1l1558:
  3257                           
  3258                           ;lab2_main.c: 98:             TXREG = C21 + 48;
  3259  032D  3001               	movlw	1
  3260  032E  00F0               	movwf	??_isr
  3261  032F  0870               	movf	??_isr,w
  3262  0330  07C0               	addwf	_contador,f
  3263                           
  3264                           ;lab2_main.c: 99:             bandera1 = 6;
  3265  0331  2B40               	goto	i1l1570
  3266  0332                     i1l1562:
  3267  0332  302D               	movlw	45
  3268  0333  0679               	xorwf	_RC_temp,w
  3269  0334  1D03               	btfss	3,2
  3270  0335  2B37               	goto	u71_21
  3271  0336  2B38               	goto	u71_20
  3272  0337                     u71_21:
  3273  0337  2B40               	goto	i1l199
  3274  0338                     u71_20:
  3275  0338                     i1l1564:
  3276                           
  3277                           ;lab2_main.c: 103:         } else if (bandera1 == 7){
  3278  0338  3001               	movlw	1
  3279  0339  02C0               	subwf	_contador,f
  3280                           
  3281                           ;lab2_main.c: 105:             bandera1 = 8;
  3282  033A  2B40               	goto	i1l1570
  3283  033B                     i1l1568:
  3284                           
  3285                           ;lab2_main.c: 111:             bandera1 = 0;
  3286  033B  081A               	movf	26,w	;volatile
  3287  033C  00F0               	movwf	??_isr
  3288  033D  0870               	movf	??_isr,w
  3289  033E  00F9               	movwf	_RC_temp
  3290  033F  2B40               	goto	i1l1570
  3291  0340                     i1l199:	
  3292                           ;lab2_main.c: 112:         }
  3293                           
  3294  0340                     i1l1570:
  3295                           
  3296                           ;lab2_main.c: 115:     }
  3297  0340  1E0C               	btfss	12,4	;volatile
  3298  0341  2B43               	goto	u72_21
  3299  0342  2B44               	goto	u72_20
  3300  0343                     u72_21:
  3301  0343  2BC6               	goto	i1l220
  3302  0344                     u72_20:
  3303  0344                     i1l1572:
  3304                           
  3305                           ;lab2_main.c: 116: 
  3306  0344  0878               	movf	_bandera1,w
  3307  0345  1D03               	btfss	3,2
  3308  0346  2B48               	goto	u73_21
  3309  0347  2B49               	goto	u73_20
  3310  0348                     u73_21:
  3311  0348  2B4F               	goto	i1l1578
  3312  0349                     u73_20:
  3313  0349                     i1l1574:
  3314                           
  3315                           ;lab2_main.c: 118: 
  3316  0349  083E               	movf	_C11,w
  3317  034A  3E30               	addlw	48
  3318  034B  0099               	movwf	25	;volatile
  3319  034C                     i1l1576:
  3320                           
  3321                           ;lab2_main.c: 119: void main(void) {
  3322  034C  01F8               	clrf	_bandera1
  3323  034D  0AF8               	incf	_bandera1,f
  3324                           
  3325                           ;lab2_main.c: 120:     setup();
  3326  034E  2BC5               	goto	i1l1626
  3327  034F                     i1l1578:
  3328  034F  0378               	decf	_bandera1,w
  3329  0350  1D03               	btfss	3,2
  3330  0351  2B53               	goto	u74_21
  3331  0352  2B54               	goto	u74_20
  3332  0353                     u74_21:
  3333  0353  2B5B               	goto	i1l1582
  3334  0354                     u74_20:
  3335  0354                     i1l1580:
  3336                           
  3337                           ;lab2_main.c: 121:     while(1){
  3338  0354  302E               	movlw	46
  3339  0355  0099               	movwf	25	;volatile
  3340                           
  3341                           ;lab2_main.c: 122:         if(cont > 15){
  3342  0356  3002               	movlw	2
  3343  0357  00F0               	movwf	??_isr
  3344  0358  0870               	movf	??_isr,w
  3345  0359  00F8               	movwf	_bandera1
  3346                           
  3347                           ;lab2_main.c: 123:             cont = 0;
  3348  035A  2BC5               	goto	i1l1626
  3349  035B                     i1l1582:
  3350  035B  3002               	movlw	2
  3351  035C  0678               	xorwf	_bandera1,w
  3352  035D  1D03               	btfss	3,2
  3353  035E  2B60               	goto	u75_21
  3354  035F  2B61               	goto	u75_20
  3355  0360                     u75_21:
  3356  0360  2B69               	goto	i1l1588
  3357  0361                     u75_20:
  3358  0361                     i1l1584:
  3359                           
  3360                           ;lab2_main.c: 124:             TXIE = 1;
  3361  0361  083D               	movf	_C12,w
  3362  0362  3E30               	addlw	48
  3363  0363  0099               	movwf	25	;volatile
  3364  0364                     i1l1586:
  3365                           
  3366                           ;lab2_main.c: 125:         }
  3367  0364  3003               	movlw	3
  3368  0365  00F0               	movwf	??_isr
  3369  0366  0870               	movf	??_isr,w
  3370  0367  00F8               	movwf	_bandera1
  3371                           
  3372                           ;lab2_main.c: 126: 
  3373  0368  2BC5               	goto	i1l1626
  3374  0369                     i1l1588:
  3375  0369  3003               	movlw	3
  3376  036A  0678               	xorwf	_bandera1,w
  3377  036B  1D03               	btfss	3,2
  3378  036C  2B6E               	goto	u76_21
  3379  036D  2B6F               	goto	u76_20
  3380  036E                     u76_21:
  3381  036E  2B77               	goto	i1l1594
  3382  036F                     u76_20:
  3383  036F                     i1l1590:
  3384                           
  3385                           ;lab2_main.c: 127: 
  3386  036F  083C               	movf	_C13,w
  3387  0370  3E30               	addlw	48
  3388  0371  0099               	movwf	25	;volatile
  3389  0372                     i1l1592:
  3390                           
  3391                           ;lab2_main.c: 128:     C11 = ADC1 / 51;
  3392  0372  3004               	movlw	4
  3393  0373  00F0               	movwf	??_isr
  3394  0374  0870               	movf	??_isr,w
  3395  0375  00F8               	movwf	_bandera1
  3396                           
  3397                           ;lab2_main.c: 129:     C12 = ((ADC1 * 100 / 51) - (C11*100))/10;
  3398  0376  2BC5               	goto	i1l1626
  3399  0377                     i1l1594:
  3400  0377  3004               	movlw	4
  3401  0378  0678               	xorwf	_bandera1,w
  3402  0379  1D03               	btfss	3,2
  3403  037A  2B7C               	goto	u77_21
  3404  037B  2B7D               	goto	u77_20
  3405  037C                     u77_21:
  3406  037C  2B84               	goto	i1l1598
  3407  037D                     u77_20:
  3408  037D                     i1l1596:
  3409                           
  3410                           ;lab2_main.c: 130:     C13 = ((ADC1 * 100 / 51) - (C11*100) - (C12*10));
  3411  037D  302D               	movlw	45
  3412  037E  0099               	movwf	25	;volatile
  3413                           
  3414                           ;lab2_main.c: 131: 
  3415  037F  3005               	movlw	5
  3416  0380  00F0               	movwf	??_isr
  3417  0381  0870               	movf	??_isr,w
  3418  0382  00F8               	movwf	_bandera1
  3419                           
  3420                           ;lab2_main.c: 132:     C21 = ADC2 / 51;
  3421  0383  2BC5               	goto	i1l1626
  3422  0384                     i1l1598:
  3423  0384  3005               	movlw	5
  3424  0385  0678               	xorwf	_bandera1,w
  3425  0386  1D03               	btfss	3,2
  3426  0387  2B89               	goto	u78_21
  3427  0388  2B8A               	goto	u78_20
  3428  0389                     u78_21:
  3429  0389  2B92               	goto	i1l1604
  3430  038A                     u78_20:
  3431  038A                     i1l1600:
  3432                           
  3433                           ;lab2_main.c: 134:     C23 = (((ADC2 * 100) / 51) - (C21*100) - (C22*10));
  3434  038A  083B               	movf	_C21,w
  3435  038B  3E30               	addlw	48
  3436  038C  0099               	movwf	25	;volatile
  3437  038D                     i1l1602:
  3438                           
  3439                           ;lab2_main.c: 135: 
  3440  038D  3006               	movlw	6
  3441  038E  00F0               	movwf	??_isr
  3442  038F  0870               	movf	??_isr,w
  3443  0390  00F8               	movwf	_bandera1
  3444                           
  3445                           ;lab2_main.c: 136: 
  3446  0391  2BC5               	goto	i1l1626
  3447  0392                     i1l1604:
  3448  0392  3006               	movlw	6
  3449  0393  0678               	xorwf	_bandera1,w
  3450  0394  1D03               	btfss	3,2
  3451  0395  2B97               	goto	u79_21
  3452  0396  2B98               	goto	u79_20
  3453  0397                     u79_21:
  3454  0397  2B9F               	goto	i1l1608
  3455  0398                     u79_20:
  3456  0398                     i1l1606:
  3457                           
  3458                           ;lab2_main.c: 137:     C31 = contador / 100;
  3459  0398  302E               	movlw	46
  3460  0399  0099               	movwf	25	;volatile
  3461                           
  3462                           ;lab2_main.c: 138:     C32 = ( contador - C31*100)/10;
  3463  039A  3007               	movlw	7
  3464  039B  00F0               	movwf	??_isr
  3465  039C  0870               	movf	??_isr,w
  3466  039D  00F8               	movwf	_bandera1
  3467                           
  3468                           ;lab2_main.c: 139:     C33 = ( contador - C31*100) - C32*10;
  3469  039E  2BC5               	goto	i1l1626
  3470  039F                     i1l1608:
  3471  039F  3007               	movlw	7
  3472  03A0  0678               	xorwf	_bandera1,w
  3473  03A1  1D03               	btfss	3,2
  3474  03A2  2BA4               	goto	u80_21
  3475  03A3  2BA5               	goto	u80_20
  3476  03A4                     u80_21:
  3477  03A4  2BAD               	goto	i1l1614
  3478  03A5                     u80_20:
  3479  03A5                     i1l1610:
  3480                           
  3481                           ;lab2_main.c: 140: 
  3482  03A5  083A               	movf	_C22,w
  3483  03A6  3E30               	addlw	48
  3484  03A7  0099               	movwf	25	;volatile
  3485  03A8                     i1l1612:
  3486                           
  3487                           ;lab2_main.c: 141: 
  3488  03A8  3008               	movlw	8
  3489  03A9  00F0               	movwf	??_isr
  3490  03AA  0870               	movf	??_isr,w
  3491  03AB  00F8               	movwf	_bandera1
  3492                           
  3493                           ;lab2_main.c: 142:     if (C12 > 9){
  3494  03AC  2BC5               	goto	i1l1626
  3495  03AD                     i1l1614:
  3496  03AD  3008               	movlw	8
  3497  03AE  0678               	xorwf	_bandera1,w
  3498  03AF  1D03               	btfss	3,2
  3499  03B0  2BB2               	goto	u81_21
  3500  03B1  2BB3               	goto	u81_20
  3501  03B2                     u81_21:
  3502  03B2  2BBB               	goto	i1l1620
  3503  03B3                     u81_20:
  3504  03B3                     i1l1616:
  3505                           
  3506                           ;lab2_main.c: 143:         C12 = 9;
  3507  03B3  0839               	movf	_C23,w
  3508  03B4  3E30               	addlw	48
  3509  03B5  0099               	movwf	25	;volatile
  3510  03B6                     i1l1618:
  3511                           
  3512                           ;lab2_main.c: 144:     }
  3513  03B6  3009               	movlw	9
  3514  03B7  00F0               	movwf	??_isr
  3515  03B8  0870               	movf	??_isr,w
  3516  03B9  00F8               	movwf	_bandera1
  3517                           
  3518                           ;lab2_main.c: 145:     if (C13 > 9){
  3519  03BA  2BC5               	goto	i1l1626
  3520  03BB                     i1l1620:
  3521  03BB  3009               	movlw	9
  3522  03BC  0678               	xorwf	_bandera1,w
  3523  03BD  1D03               	btfss	3,2
  3524  03BE  2BC0               	goto	u82_21
  3525  03BF  2BC1               	goto	u82_20
  3526  03C0                     u82_21:
  3527  03C0  2BC5               	goto	i1l214
  3528  03C1                     u82_20:
  3529  03C1                     i1l1622:
  3530                           
  3531                           ;lab2_main.c: 146:         C13 = 9;
  3532  03C1  300D               	movlw	13
  3533  03C2  0099               	movwf	25	;volatile
  3534  03C3                     i1l1624:
  3535                           
  3536                           ;lab2_main.c: 147:     }
  3537  03C3  01F8               	clrf	_bandera1
  3538  03C4  2BC5               	goto	i1l1626
  3539  03C5                     i1l214:
  3540  03C5                     i1l1626:
  3541                           
  3542                           ;lab2_main.c: 150:     }
  3543  03C5  120C               	bcf	12,4	;volatile
  3544  03C6                     i1l220:
  3545  03C6  0872               	movf	??_isr+2,w
  3546  03C7  008A               	movwf	10
  3547  03C8  0E71               	swapf	??_isr+1,w
  3548  03C9  0083               	movwf	3
  3549  03CA  0EFE               	swapf	btemp,f
  3550  03CB  0E7E               	swapf	btemp,w
  3551  03CC  0009               	retfie
  3552  03CD                     __end_of_isr:
  3553  007E                     btemp	set	126	;btemp
  3554  007E                     wtemp0	set	126
  3555                           
  3556                           	psect	intentry
  3557  0004                     __pintentry:	
  3558                           ;incstack = 0
  3559                           ; Regs used in _isr: [wreg+status,2+status,0]
  3560                           
  3561  0004                     interrupt_function:
  3562  007E                     saved_w	set	btemp
  3563  0004  00FE               	movwf	btemp
  3564  0005  0E03               	swapf	3,w
  3565  0006  00F1               	movwf	??_isr+1
  3566  0007  080A               	movf	10,w
  3567  0008  00F2               	movwf	??_isr+2
  3568  0009  120A  118A  2AEE   	ljmp	_isr
  3569                           
  3570                           	psect	config
  3571                           
  3572                           ;Config register CONFIG1 @ 0x2007
  3573                           ;	Oscillator Selection bits
  3574                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3575                           ;	Watchdog Timer Enable bit
  3576                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3577                           ;	Power-up Timer Enable bit
  3578                           ;	PWRTE = OFF, PWRT disabled
  3579                           ;	RE3/MCLR pin function select bit
  3580                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3581                           ;	Code Protection bit
  3582                           ;	CP = OFF, Program memory code protection is disabled
  3583                           ;	Data Code Protection bit
  3584                           ;	CPD = OFF, Data memory code protection is disabled
  3585                           ;	Brown Out Reset Selection bits
  3586                           ;	BOREN = OFF, BOR disabled
  3587                           ;	Internal External Switchover bit
  3588                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3589                           ;	Fail-Safe Clock Monitor Enabled bit
  3590                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3591                           ;	Low Voltage Programming Enable bit
  3592                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3593                           ;	In-Circuit Debugger Mode bit
  3594                           ;	DEBUG = 0x1, unprogrammed default
  3595  2007                     	org	8199
  3596  2007  20D4               	dw	8404
  3597                           
  3598                           ;Config register CONFIG2 @ 0x2008
  3599                           ;	Brown-out Reset Selection bit
  3600                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3601                           ;	Flash Program Memory Self Write Enable bits
  3602                           ;	WRT = OFF, Write protection off
  3603  2008                     	org	8200
  3604  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___awdiv
    _displayLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _setup->_displayLCD
    _displayLCD->_Lcd_Set_Cursor
    _displayLCD->_Lcd_Write_String
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    7625
                                             10 BANK0     10    10      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                             ___bmul
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2127
                           _Lcd_Init
                         _displayLCD
                            _initADC
                          _initUSART
 ---------------------------------------------------------------------------------
 (2) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initADC                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _displayLCD                                           1     1      0    2012
                                              3 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     408
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1396
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     548
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1820
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _setup
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _displayLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _initADC
     _initUSART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 12:41:05 2021

                        _a 0034                          pc 0002             ___bmul@product 0075  
                       l20 03EA                         l22 03F1                         l30 044B  
                       l23 03F8                         l24 03FF                         l41 06AE  
                       l25 0406                         l50 0633                         l26 040D  
                       l27 0414                         l44 064D                         l28 041B  
                       l53 057A                         l29 0422                         l62 060D  
                       l56 0693                         l85 067D               ___awdiv@sign 0027  
                       fsr 0004        ___wmul@multiplicand 0075                        _C11 003E  
                      _C12 003D                        _C13 003C                        _C21 003B  
                      _C22 003A                        _C23 0039                        _C31 0038  
                      _C32 0037                        _C33 0036                        l230 0213  
                      l231 021D                        l232 0227                        l330 05E4  
                      l242 04B4                        l227 01F5                        l228 01FF  
                      l229 0209                        l239 05B9                        l328 05CA  
                      l354 06A8                        l481 051D                        _RA7 002F  
                      _RE0 0048                        _RE1 0049                        u610 04FB  
                      u530 069A                        u611 04FA                        u531 0699  
                      u540 06A7                        u605 04EB                        u541 06A6  
                      u630 050F                        u550 04BC                        u631 050E  
                      u615 04F7                        u551 04BB                        u640 0514  
                      u560 04C7                        u641 0513                        u625 0503  
                      u561 04C6                        u570 04D8                        u571 04D7  
                      u590 04EA                        u910 0616                        u591 04E9  
                      u911 0615                        u920 0628                        u585 04DC  
                      u921 0627                        u930 060D                        u931 060C  
                      u940 05C2                        u941 05C1                        u970 05DE  
                      u971 05DD                        u955 05CB                        u980 0034  
                      u965 05D2                        u981 0033                        u990 01F1  
                      u991 01F0                        _isr 02EE                        fsr0 0004  
                     l1330 03DC                       l1500 04EA                       l1340 0429  
                     l1332 03E0                       l1324 03CE                       l1502 04FB  
                     l1510 050F                       l1334 03E3                       l1326 03D3  
                     l1512 0514                       l1504 0501                       l1336 03E6  
                     l1328 03DB                       l1514 0519                       l1506 0502  
                     l1370 066F                       l1508 0509                       l1460 0695  
                     l1380 0679                       l1372 0673                       l1470 06A7  
                     l1462 0696                       l1382 067C                       l1374 0674  
                     l1480 04C1                       l1464 069A                       l1800 046C  
                     l1376 0677                       l1368 0666                       l1490 04D2  
                     l1482 04C3                       l1474 04B5                       l1466 069E  
                     l1730 06AA                       l1810 04AE                       l1802 0478  
                     l1378 0678                       l1492 04D8                       l1484 04C7  
                     l1476 04B8                       l1468 06A0                       l1740 064A  
                     l1732 0635                       l1804 048A                       l1820 0585  
                     l1812 057B                       l1900 01A5                       l1494 04DB  
                     l1486 04CC                       l1478 04BC                       l1734 0638  
                     l1750 0690                       l1742 067F                       l1806 0490  
                     l1830 058C                       l1822 0586                       l1814 0581  
                     l1910 0205                       l1902 01CD                       _ADC1 0042  
                     l1496 04E2                       l1488 04D0                       l1736 063E  
                     l1760 0628                       l1752 0611                       l1744 0682  
                     l1808 04A2                       l1840 05A3                       l1832 0591  
                     l1824 0589                       l1816 0583                       l1920 0231  
                     l1912 020F                       l1904 01EB                       _ADC2 0041  
                     l1498 04E6                       l1738 0641                       l1762 062D  
                     l1754 0616                       l1746 0688                       l1770 0600  
                     l1850 05AE                       l1842 05A6                       l1834 0592  
                     l1826 058A                       l1818 0584                       l1930 0263  
                     l1922 0239                       l1914 0219                       l1906 01F1  
                     l1860 05C2                       l1780 0549                       l1772 051E  
                     l1756 061B                       l1748 068B                       l1764 05E8  
                     l1852 05AF                       l1844 05A7                       l1836 0597  
                     l1828 058B                       l1940 0296                       l1932 026C  
                     l1924 0242                       l1916 0223                       l1908 01FB  
                     l1862 05D1                       l1790 056E                       l1782 0556  
                     l1774 0529                       l1758 0622                       l1766 05EB  
                     l1854 05B4                       l1846 05A9                       l1838 059D  
                     l1950 02CC                       l1942 02A2                       l1934 0278  
                     l1926 024E                       l1918 022D                       l1864 05D8  
                     l1856 05BA                       l1792 0574                       l1784 055C  
                     l1776 052F                       l1768 05F8                       l1848 05AD  
                     l1952 02D5                       l1944 02AB                       l1936 0281  
                     l1928 0257                       l1880 0035                       l1866 05DE  
                     l1858 05BE                       l1786 0562                       l1778 053F  
                     l1794 044C                       l1954 02E1                       l1946 02B7  
                     l1938 028D                       l1890 00E4                       l1882 0038  
                     l1874 0027                       l1788 0568                       l1796 0458  
                     l1948 02C0                       l1892 00FA                       l1884 004F  
                     l1876 002C                       l1798 045E                       l1894 0139  
                     l1886 008E                       l1878 0034                       l1976 0431  
                     l1896 014C                       l1888 00A1                       l1898 018F  
                     _ADIF 0066                       ?_isr 0070                       STR_1 065D  
                     STR_2 0654                       STR_3 0660                       STR_4 0654  
                     STR_5 0663                       STR_6 0659                       u1000 01FB  
                     u1001 01FA                       u1010 0205                       u1011 0204  
                     u1020 020F                       u1021 020E                       u1030 0219  
                     u1031 0218                       u1040 0223                       u1041 0222  
                     u1050 022D                       u1107 0545                       u1051 022C  
                     u1117 0553                       u1127 0645                       u1067 03DE  
                     u1077 068D                       u1087 0524                       u1097 0535  
                     _TMR0 0001                       _TXIE 0464                       _TXIF 0064  
        ?_Lcd_Write_String 0070                       _cont 003F                       _main 0027  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0076  
          __end_of_Lcd_Cmd 064E          ___bmul@multiplier 0076                      ??_isr 0070  
                    ?_main 0070            __end_of___awdiv 051E                      _ANSEL 0188  
          ___awdiv@divisor 0022                      i1l220 03C6                      i1l214 03C5  
                    i1l199 0340            ___awdiv@counter 0026                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009                      u70_20 032D  
                    u70_21 032C                      u71_20 0338                      u71_21 0337  
                    u80_20 03A5                      u72_20 0344                      u80_21 03A4  
                    u72_21 0343                      u81_20 03B3                      u73_20 0349  
                    u65_20 02F2                      u81_21 03B2                      u73_21 0348  
                    u65_21 02F1    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    u82_20 03C1                      u74_20 0354                      u66_20 02FF  
                    u82_21 03C0                      u74_21 0353                      u66_21 02FE  
                    u75_20 0361                      u67_20 0304                      u75_21 0360  
                    u67_21 0303                      u76_20 036F                      u68_20 031F  
                    u76_21 036E                      u68_21 031E                      u77_20 037D  
                    u69_20 0326                      u77_21 037C                      u69_21 0325  
                    u78_20 038A                      u78_21 0389                      u79_20 0398  
                    u79_21 0397                      _TXREG 0019            __end_of_initADC 044C  
                    _setup 057B                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 057B           __end_of_Lcd_Port 06AF  
          __initialization 000F               __end_of_main 02EE                     ??_main 002A  
                   _ADRESH 001E           ___awdiv@dividend 0024                     ?_setup 0070  
                   _ANSELH 0189                     i1l1600 038A                     i1l1610 03A5  
                   i1l1602 038D                     i1l1530 02FF                     i1l1522 02EE  
                   i1l1620 03BB                     i1l1612 03A8                     i1l1604 0392  
                   i1l1540 030F                     i1l1532 0304                     i1l1524 02F2  
                   i1l1622 03C1                     i1l1614 03AD                     i1l1606 0398  
                   i1l1550 031F                     i1l1542 0310                     i1l1534 0308  
                   i1l1526 02F8                     i1l1624 03C3                     i1l1616 03B3  
                   i1l1608 039F                     i1l1552 0320                     i1l1544 0312  
                   i1l1536 0309                     i1l1528 02F9                     i1l1618 03B6  
                   i1l1626 03C5                     i1l1562 0332                     i1l1554 0326  
                   i1l1570 0340                     i1l1546 0318                     i1l1538 030B  
                   i1l1580 0354                     i1l1572 0344                     i1l1564 0338  
                   i1l1556 0327                     i1l1548 031B                     i1l1590 036F  
                   i1l1582 035B                     i1l1574 0349                     i1l1558 032D  
                   u113_27 0315                     i1l1592 0372                     i1l1584 0361  
                   i1l1576 034C                     i1l1568 033B                     i1l1594 0377  
                   i1l1586 0364                     i1l1578 034F                     i1l1596 037D  
                   i1l1588 0369                     i1l1598 0384                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016                     ___bmul 0694  
                   ___wmul 05BA                  ??___awdiv 0077           ___awdiv@quotient 0028  
                ??_initADC 0073                     saved_w 007E            Lcd_Set_Cursor@a 0021  
          Lcd_Set_Cursor@b 0077    __end_of__initialization 0023        ___bmul@multiplicand 0073  
           __pcstackCOMMON 0070              __end_of_setup 05BA             _Lcd_Set_Cursor 060E  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0078                 __pbssBANK0 0034         __size_of_initUSART 0018  
               __pmaintext 0027                    ?___bmul 0073                    ?___wmul 0073  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0634  
               ??_Lcd_Init 0020                 _displayLCD 044C                 ??_Lcd_Port 0073  
               __stringtab 064E                    _RC_temp 0079             _Lcd_Write_Char 067E  
                  _Lcd_Cmd 0634            __size_of___bmul 0015                    ___awdiv 04B5  
          __size_of___wmul 002B                    _bandera 007A                  _ANSELbits 0188  
          ?_Lcd_Set_Cursor 0077          __end_of_initUSART 067E                    __ptext1 057B  
                  __ptext2 0666                    __ptext3 03CD                    __ptext4 044C  
                  __ptext5 05E5                    __ptext6 067E                    __ptext7 060E  
                  __ptext8 051E                    __ptext9 0634                    _initADC 03CD  
             __size_of_isr 00DF     __end_of_Lcd_Write_Char 0694       end_of_initialization 0023  
                _RCSTAbits 0018                  Lcd_Port@a 0073                  _TRISAbits 0085  
                _TRISCbits 0087                  _TRISEbits 0089                ?_displayLCD 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
                _TXSTAbits 0098             __end_of___bmul 06A9             __end_of___wmul 05E5  
         _Lcd_Write_String 05E5                _BAUDCTLbits 0187        start_initialization 000F  
              __end_of_isr 03CD          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0006  
                 ??___bmul 0074                   ??___wmul 0077        __size_of_displayLCD 0069  
          Lcd_Write_Char@a 0075                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                  _main$1258 0032  
         ??_Lcd_Set_Cursor 0020                   ?___awdiv 0022             initADC@channel 0075  
                __pstrings 064E                   ?_initADC 0070                  _initUSART 0666  
           __size_of_setup 003F          interrupt_function 0004             ___wmul@product 0020  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
               _ADCON0bits 001F                __stringbase 0653                 _ADCON1bits 009F  
        ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074                 ?_initUSART 0070  
             ??_displayLCD 0023                   _Lcd_Init 051E                   _Lcd_Port 06A9  
 __end_of_Lcd_Write_String 060E           __size_of_Lcd_Cmd 001A         __end_of_displayLCD 04B5  
         __size_of___awdiv 0069         __end_of__stringtab 0654                   _bandera1 0078  
         __size_of_initADC 007F                   __ptext10 06A9                   __ptext11 05BA  
                 __ptext12 0694                   __ptext13 04B5                   __ptext14 02EE  
                 _contador 0040              __size_of_main 02C7                 _INTCONbits 000B  
              ??_initUSART 0073                   intlevel1 0000                  stringcode 064E  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0022                   stringdir 064E  
                 stringtab 064E  
